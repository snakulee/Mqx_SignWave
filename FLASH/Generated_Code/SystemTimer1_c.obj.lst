   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SystemTimer1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	12
  22      00000000 
  22      00000000 
  23              		.section	.text.SystemTimer1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	SystemTimer1_Init
  26              		.code	16
  27              		.thumb_func
  29              	SystemTimer1_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/SystemTimer1.c"
   1:../Generated_Code/SystemTimer1.c **** /** ###################################################################
   2:../Generated_Code/SystemTimer1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/SystemTimer1.c **** **     Filename    : SystemTimer1.c
   4:../Generated_Code/SystemTimer1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/SystemTimer1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/SystemTimer1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/SystemTimer1.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.000
   8:../Generated_Code/SystemTimer1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/SystemTimer1.c **** **     Date/Time   : 2013-03-18, 11:42, # CodeGen: 65
  10:../Generated_Code/SystemTimer1.c **** **     Abstract    :
  11:../Generated_Code/SystemTimer1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/SystemTimer1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/SystemTimer1.c **** **     Settings    :
  14:../Generated_Code/SystemTimer1.c **** **          Component name                                 : SystemTimer1
  15:../Generated_Code/SystemTimer1.c **** **          Module name                                    : SysTick
  16:../Generated_Code/SystemTimer1.c **** **          Counter                                        : SYST_CVR
  17:../Generated_Code/SystemTimer1.c **** **          Counter direction                              : Down
  18:../Generated_Code/SystemTimer1.c **** **          Counter width                                  : 24 bits
  19:../Generated_Code/SystemTimer1.c **** **          Value type                                     : Optimal
  20:../Generated_Code/SystemTimer1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/SystemTimer1.c **** **            Counter frequency                            : 48 MHz
  22:../Generated_Code/SystemTimer1.c **** **          Counter restart                                : On-match
  23:../Generated_Code/SystemTimer1.c **** **            Period device                                : SYST_RVR
  24:../Generated_Code/SystemTimer1.c **** **            Period                                       : 500 ?s
  25:../Generated_Code/SystemTimer1.c **** **            Interrupt                                    : Enabled
  26:../Generated_Code/SystemTimer1.c **** **              Interrupt                                  : INT_SysTick
  27:../Generated_Code/SystemTimer1.c **** **              Interrupt priority                         : medium priority
  28:../Generated_Code/SystemTimer1.c **** **          Channel list                                   : 0
  29:../Generated_Code/SystemTimer1.c **** **          Initialization                                 : 
  30:../Generated_Code/SystemTimer1.c **** **            Enabled in init. code                        : no
  31:../Generated_Code/SystemTimer1.c **** **            Auto initialization                          : no
  32:../Generated_Code/SystemTimer1.c **** **            Event mask                                   : 
  33:../Generated_Code/SystemTimer1.c **** **              OnCounterRestart                           : Enabled
  34:../Generated_Code/SystemTimer1.c **** **              OnChannel0                                 : Disabled
  35:../Generated_Code/SystemTimer1.c **** **              OnChannel1                                 : Disabled
  36:../Generated_Code/SystemTimer1.c **** **              OnChannel2                                 : Disabled
  37:../Generated_Code/SystemTimer1.c **** **              OnChannel3                                 : Disabled
  38:../Generated_Code/SystemTimer1.c **** **              OnChannel4                                 : Disabled
  39:../Generated_Code/SystemTimer1.c **** **              OnChannel5                                 : Disabled
  40:../Generated_Code/SystemTimer1.c **** **              OnChannel6                                 : Disabled
  41:../Generated_Code/SystemTimer1.c **** **              OnChannel7                                 : Disabled
  42:../Generated_Code/SystemTimer1.c **** **          CPU clock/configuration selection              : 
  43:../Generated_Code/SystemTimer1.c **** **            Clock configuration 0                        : This component enabled
  44:../Generated_Code/SystemTimer1.c **** **            Clock configuration 1                        : This component enabled
  45:../Generated_Code/SystemTimer1.c **** **            Clock configuration 2                        : This component enabled
  46:../Generated_Code/SystemTimer1.c **** **            Clock configuration 3                        : This component enabled
  47:../Generated_Code/SystemTimer1.c **** **            Clock configuration 4                        : This component enabled
  48:../Generated_Code/SystemTimer1.c **** **            Clock configuration 5                        : This component enabled
  49:../Generated_Code/SystemTimer1.c **** **            Clock configuration 6                        : This component enabled
  50:../Generated_Code/SystemTimer1.c **** **            Clock configuration 7                        : This component enabled
  51:../Generated_Code/SystemTimer1.c **** **     Contents    :
  52:../Generated_Code/SystemTimer1.c **** **         Init              - LDD_TDeviceData* SystemTimer1_Init(LDD_TUserData *UserDataPtr);
  53:../Generated_Code/SystemTimer1.c **** **         Deinit            - void SystemTimer1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  54:../Generated_Code/SystemTimer1.c **** **         Enable            - LDD_TError SystemTimer1_Enable(LDD_TDeviceData *DeviceDataPtr);
  55:../Generated_Code/SystemTimer1.c **** **         GetInputFrequency - uint32_t SystemTimer1_GetInputFrequency(LDD_TDeviceData *DeviceDataP
  56:../Generated_Code/SystemTimer1.c **** **         SetPeriodTicks    - LDD_TError SystemTimer1_SetPeriodTicks(LDD_TDeviceData *DeviceDataPt
  57:../Generated_Code/SystemTimer1.c **** **         GetPeriodTicks    - LDD_TError SystemTimer1_GetPeriodTicks(LDD_TDeviceData *DeviceDataPt
  58:../Generated_Code/SystemTimer1.c **** **         ResetCounter      - LDD_TError SystemTimer1_ResetCounter(LDD_TDeviceData *DeviceDataPtr)
  59:../Generated_Code/SystemTimer1.c **** **         GetCounterValue   - SystemTimer1_TValueType SystemTimer1_GetCounterValue(LDD_TDeviceData
  60:../Generated_Code/SystemTimer1.c **** **
  61:../Generated_Code/SystemTimer1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  62:../Generated_Code/SystemTimer1.c **** **     
  63:../Generated_Code/SystemTimer1.c **** **     http      : www.freescale.com
  64:../Generated_Code/SystemTimer1.c **** **     mail      : support@freescale.com
  65:../Generated_Code/SystemTimer1.c **** ** ###################################################################*/
  66:../Generated_Code/SystemTimer1.c **** 
  67:../Generated_Code/SystemTimer1.c **** /* MODULE SystemTimer1. */
  68:../Generated_Code/SystemTimer1.c **** 
  69:../Generated_Code/SystemTimer1.c **** #include "MQX1.h"
  70:../Generated_Code/SystemTimer1.c **** #include "SystemTimer1.h"
  71:../Generated_Code/SystemTimer1.c **** /* MQX Lite include files */
  72:../Generated_Code/SystemTimer1.c **** #include "mqxlite.h"
  73:../Generated_Code/SystemTimer1.c **** #include "mqxlite_prv.h"
  74:../Generated_Code/SystemTimer1.c **** #include "IO_Map.h"
  75:../Generated_Code/SystemTimer1.c **** 
  76:../Generated_Code/SystemTimer1.c **** 
  77:../Generated_Code/SystemTimer1.c **** typedef struct {
  78:../Generated_Code/SystemTimer1.c ****   LDD_RTOS_TISRVectorSettings SavedISRSettings_TUInterrupt; /* {MQXLite RTOS Adapter} Saved setting
  79:../Generated_Code/SystemTimer1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  80:../Generated_Code/SystemTimer1.c **** } SystemTimer1_TDeviceData;
  81:../Generated_Code/SystemTimer1.c **** 
  82:../Generated_Code/SystemTimer1.c **** typedef SystemTimer1_TDeviceData *SystemTimer1_TDeviceDataPtr; /* Pointer to the device data struct
  83:../Generated_Code/SystemTimer1.c **** 
  84:../Generated_Code/SystemTimer1.c **** /* {MQXLite RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  85:../Generated_Code/SystemTimer1.c **** static SystemTimer1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  86:../Generated_Code/SystemTimer1.c **** 
  87:../Generated_Code/SystemTimer1.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_COUNTER_RESTART)
  88:../Generated_Code/SystemTimer1.c **** 
  89:../Generated_Code/SystemTimer1.c **** /* Internal method prototypes */
  90:../Generated_Code/SystemTimer1.c **** /*
  91:../Generated_Code/SystemTimer1.c **** ** ===================================================================
  92:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_Init (component TimerUnit_LDD)
  93:../Generated_Code/SystemTimer1.c **** **
  94:../Generated_Code/SystemTimer1.c **** **     Description :
  95:../Generated_Code/SystemTimer1.c **** **         Initializes the device. Allocates memory for the device data
  96:../Generated_Code/SystemTimer1.c **** **         structure, allocates interrupt vectors and sets interrupt
  97:../Generated_Code/SystemTimer1.c **** **         priority, sets pin routing, sets timing, etc. If the
  98:../Generated_Code/SystemTimer1.c **** **         property <"Enable in init. code"> is set to "yes" value then
  99:../Generated_Code/SystemTimer1.c **** **         the device is also enabled (see the description of the
 100:../Generated_Code/SystemTimer1.c **** **         <Enable> method). In this case the <Enable> method is not
 101:../Generated_Code/SystemTimer1.c **** **         necessary and needn't to be generated. This method can be
 102:../Generated_Code/SystemTimer1.c **** **         called only once. Before the second call of Init the <Deinit>
 103:../Generated_Code/SystemTimer1.c **** **         must be called first.
 104:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 105:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 106:../Generated_Code/SystemTimer1.c **** **       * UserDataPtr     - Pointer to the user or
 107:../Generated_Code/SystemTimer1.c **** **                           RTOS specific data. This pointer will be
 108:../Generated_Code/SystemTimer1.c **** **                           passed as an event or callback parameter.
 109:../Generated_Code/SystemTimer1.c **** **     Returns     :
 110:../Generated_Code/SystemTimer1.c **** **         ---             - Pointer to the dynamically allocated
 111:../Generated_Code/SystemTimer1.c **** **                           private structure or NULL if there was an
 112:../Generated_Code/SystemTimer1.c **** **                           error.
 113:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 114:../Generated_Code/SystemTimer1.c **** */
 115:../Generated_Code/SystemTimer1.c **** LDD_TDeviceData* SystemTimer1_Init(LDD_TUserData *UserDataPtr)
 116:../Generated_Code/SystemTimer1.c **** {
  32              		.loc 1 116 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 117:../Generated_Code/SystemTimer1.c ****   /* Allocate device structure */
 118:../Generated_Code/SystemTimer1.c ****   SystemTimer1_TDeviceData *DeviceDataPrv;
 119:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 120:../Generated_Code/SystemTimer1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 120 0
  47 0008 1A4B     		ldr	r3, .L3
  48 000a FB60     		str	r3, [r7, #12]
 121:../Generated_Code/SystemTimer1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  49              		.loc 1 121 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 7A68     		ldr	r2, [r7, #4]
  52 0010 9A60     		str	r2, [r3, #8]
 122:../Generated_Code/SystemTimer1.c ****   /* Interrupt vector(s) allocation */
 123:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} Save old and set new interrupt vector (function handler and ISR paramet
 124:../Generated_Code/SystemTimer1.c ****   /* Note: Exception handler for interrupt is not saved, because it is not modified */
 125:../Generated_Code/SystemTimer1.c ****   DeviceDataPrv->SavedISRSettings_TUInterrupt.isrData = _int_get_isr_data(LDD_ivIndex_INT_SysTick);
  53              		.loc 1 125 0
  54 0012 0F20     		mov	r0, #15
  55 0014 FFF7FEFF 		bl	_int_get_isr_data
  56 0018 021C     		mov	r2, r0
  57 001a FB68     		ldr	r3, [r7, #12]
  58 001c 5A60     		str	r2, [r3, #4]
 126:../Generated_Code/SystemTimer1.c ****   DeviceDataPrv->SavedISRSettings_TUInterrupt.isrFunction = _int_install_isr(LDD_ivIndex_INT_SysTic
  59              		.loc 1 126 0
  60 001e 164A     		ldr	r2, .L3+4
  61 0020 FB68     		ldr	r3, [r7, #12]
  62 0022 0F20     		mov	r0, #15
  63 0024 111C     		mov	r1, r2
  64 0026 1A1C     		mov	r2, r3
  65 0028 FFF7FEFF 		bl	_int_install_isr
  66 002c 021C     		mov	r2, r0
  67 002e FB68     		ldr	r3, [r7, #12]
  68 0030 1A60     		str	r2, [r3]
 127:../Generated_Code/SystemTimer1.c ****   /* SYST_CSR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNTFLAG
 128:../Generated_Code/SystemTimer1.c ****   SYST_CSR = 0x00U;                    /* Clear control register */
  69              		.loc 1 128 0
  70 0032 124B     		ldr	r3, .L3+8
  71 0034 0022     		mov	r2, #0
  72 0036 1A60     		str	r2, [r3]
 129:../Generated_Code/SystemTimer1.c ****   /* SYST_RVR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,RELOAD=0x5DBF */
 130:../Generated_Code/SystemTimer1.c ****   SYST_RVR = SysTick_RVR_RELOAD(0x5DBF); /* Setup reload value */
  73              		.loc 1 130 0
  74 0038 104B     		ldr	r3, .L3+8
  75 003a 114A     		ldr	r2, .L3+12
  76 003c 5A60     		str	r2, [r3, #4]
 131:../Generated_Code/SystemTimer1.c ****   /* SYST_CVR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CURRENT=0 */
 132:../Generated_Code/SystemTimer1.c ****   SYST_CVR = 0x00U;                    /* Clear current value */
  77              		.loc 1 132 0
  78 003e 0F4B     		ldr	r3, .L3+8
  79 0040 0022     		mov	r2, #0
  80 0042 9A60     		str	r2, [r3, #8]
 133:../Generated_Code/SystemTimer1.c ****   /* SCB_SHPR3: PRI_15=0x20 */
 134:../Generated_Code/SystemTimer1.c ****   SCB_SHPR3 = (uint32_t)((SCB_SHPR3 & (uint32_t)~(uint32_t)(
  81              		.loc 1 134 0
  82 0044 0F4A     		ldr	r2, .L3+16
  83 0046 0F49     		ldr	r1, .L3+16
  84 0048 D223     		mov	r3, #210
  85 004a 1B01     		lsl	r3, r3, #4
  86 004c CB58     		ldr	r3, [r1, r3]
  87 004e 1B02     		lsl	r3, r3, #8
  88 0050 1B0A     		lsr	r3, r3, #8
  89 0052 8021     		mov	r1, #128
  90 0054 8905     		lsl	r1, r1, #22
  91 0056 1943     		orr	r1, r3
  92 0058 D223     		mov	r3, #210
  93 005a 1B01     		lsl	r3, r3, #4
  94 005c D150     		str	r1, [r2, r3]
 135:../Generated_Code/SystemTimer1.c ****                SCB_SHPR3_PRI_15(0xDF)
 136:../Generated_Code/SystemTimer1.c ****               )) | (uint32_t)(
 137:../Generated_Code/SystemTimer1.c ****                SCB_SHPR3_PRI_15(0x20)
 138:../Generated_Code/SystemTimer1.c ****               ));                                                  
 139:../Generated_Code/SystemTimer1.c ****   /* SYST_CSR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNTFLAG
 140:../Generated_Code/SystemTimer1.c ****   SYST_CSR = (SysTick_CSR_CLKSOURCE_MASK | SysTick_CSR_TICKINT_MASK); /* Set up control register */
  95              		.loc 1 140 0
  96 005e 074B     		ldr	r3, .L3+8
  97 0060 0622     		mov	r2, #6
  98 0062 1A60     		str	r2, [r3]
 141:../Generated_Code/SystemTimer1.c ****   /* Registration of the device structure */
 142:../Generated_Code/SystemTimer1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_SystemTimer1_ID,DeviceDataPrv);
  99              		.loc 1 142 0
 100 0064 084B     		ldr	r3, .L3+20
 101 0066 FA68     		ldr	r2, [r7, #12]
 102 0068 1A60     		str	r2, [r3]
 143:../Generated_Code/SystemTimer1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 103              		.loc 1 143 0
 104 006a FB68     		ldr	r3, [r7, #12]
 144:../Generated_Code/SystemTimer1.c **** }
 105              		.loc 1 144 0
 106 006c 181C     		mov	r0, r3
 107 006e BD46     		mov	sp, r7
 108 0070 04B0     		add	sp, sp, #16
 109              		@ sp needed for prologue
 110 0072 80BD     		pop	{r7, pc}
 111              	.L4:
 112              		.align	2
 113              	.L3:
 114 0074 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 115 0078 00000000 		.word	SystemTimer1_Interrupt
 116 007c 10E000E0 		.word	-536813552
 117 0080 BF5D0000 		.word	23999
 118 0084 00E000E0 		.word	-536813568
 119 0088 00000000 		.word	PE_LDD_DeviceDataList
 120              		.cfi_endproc
 121              	.LFE0:
 123              		.section	.text.SystemTimer1_Deinit,"ax",%progbits
 124              		.align	2
 125              		.global	SystemTimer1_Deinit
 126              		.code	16
 127              		.thumb_func
 129              	SystemTimer1_Deinit:
 130              	.LFB1:
 145:../Generated_Code/SystemTimer1.c **** 
 146:../Generated_Code/SystemTimer1.c **** /*
 147:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 148:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_Deinit (component TimerUnit_LDD)
 149:../Generated_Code/SystemTimer1.c **** **
 150:../Generated_Code/SystemTimer1.c **** **     Description :
 151:../Generated_Code/SystemTimer1.c **** **         Deinitializes the device. Switches off the device, frees the
 152:../Generated_Code/SystemTimer1.c **** **         device data structure memory, interrupts vectors, etc.
 153:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 154:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 155:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 156:../Generated_Code/SystemTimer1.c **** **                           pointer returned by Init method
 157:../Generated_Code/SystemTimer1.c **** **     Returns     : Nothing
 158:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 159:../Generated_Code/SystemTimer1.c **** */
 160:../Generated_Code/SystemTimer1.c **** void SystemTimer1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 161:../Generated_Code/SystemTimer1.c **** {
 131              		.loc 1 161 0
 132              		.cfi_startproc
 133 0000 80B5     		push	{r7, lr}
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 84B0     		sub	sp, sp, #16
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 24
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI5:
 143              		.cfi_def_cfa_register 7
 144 0006 7860     		str	r0, [r7, #4]
 162:../Generated_Code/SystemTimer1.c ****   SystemTimer1_TDeviceData *DeviceDataPrv = (SystemTimer1_TDeviceData *)DeviceDataPtr;
 145              		.loc 1 162 0
 146 0008 7B68     		ldr	r3, [r7, #4]
 147 000a FB60     		str	r3, [r7, #12]
 163:../Generated_Code/SystemTimer1.c **** 
 164:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPrv;
 165:../Generated_Code/SystemTimer1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_DISABLE);
 148              		.loc 1 165 0
 149 000c 0A4B     		ldr	r3, .L6
 150 000e 0A4A     		ldr	r2, .L6
 151 0010 1268     		ldr	r2, [r2]
 152 0012 0121     		mov	r1, #1
 153 0014 8A43     		bic	r2, r1
 154 0016 1A60     		str	r2, [r3]
 166:../Generated_Code/SystemTimer1.c ****   /* Interrupt vector(s) deallocation */
 167:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} Restore interrupt vector (function handler and ISR parameter) */
 168:../Generated_Code/SystemTimer1.c ****   /* Note: Exception handler for interrupt is not restored, because it was not modified */
 169:../Generated_Code/SystemTimer1.c ****   (void)_int_install_isr(LDD_ivIndex_INT_SysTick, ((SystemTimer1_TDeviceDataPtr)DeviceDataPrv)->Sav
 155              		.loc 1 169 0
 156 0018 FB68     		ldr	r3, [r7, #12]
 157 001a 1A68     		ldr	r2, [r3]
 158 001c FB68     		ldr	r3, [r7, #12]
 159 001e 5B68     		ldr	r3, [r3, #4]
 160 0020 0F20     		mov	r0, #15
 161 0022 111C     		mov	r1, r2
 162 0024 1A1C     		mov	r2, r3
 163 0026 FFF7FEFF 		bl	_int_install_isr
 170:../Generated_Code/SystemTimer1.c ****   /* Unregistration of the device structure */
 171:../Generated_Code/SystemTimer1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_SystemTimer1_ID);
 164              		.loc 1 171 0
 165 002a 044B     		ldr	r3, .L6+4
 166 002c 0022     		mov	r2, #0
 167 002e 1A60     		str	r2, [r3]
 172:../Generated_Code/SystemTimer1.c ****   /* Deallocation of the device structure */
 173:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 174:../Generated_Code/SystemTimer1.c **** }
 168              		.loc 1 174 0
 169 0030 BD46     		mov	sp, r7
 170 0032 04B0     		add	sp, sp, #16
 171              		@ sp needed for prologue
 172 0034 80BD     		pop	{r7, pc}
 173              	.L7:
 174 0036 C046     		.align	2
 175              	.L6:
 176 0038 10E000E0 		.word	-536813552
 177 003c 00000000 		.word	PE_LDD_DeviceDataList
 178              		.cfi_endproc
 179              	.LFE1:
 181              		.section	.text.SystemTimer1_Enable,"ax",%progbits
 182              		.align	2
 183              		.global	SystemTimer1_Enable
 184              		.code	16
 185              		.thumb_func
 187              	SystemTimer1_Enable:
 188              	.LFB2:
 175:../Generated_Code/SystemTimer1.c **** 
 176:../Generated_Code/SystemTimer1.c **** /*
 177:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 178:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_Enable (component TimerUnit_LDD)
 179:../Generated_Code/SystemTimer1.c **** **
 180:../Generated_Code/SystemTimer1.c **** **     Description :
 181:../Generated_Code/SystemTimer1.c **** **         Enables the component - it starts the signal generation.
 182:../Generated_Code/SystemTimer1.c **** **         Events may be generated (see SetEventMask). The method is
 183:../Generated_Code/SystemTimer1.c **** **         not available if the counter can't be disabled/enabled by HW.
 184:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 185:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 186:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 187:../Generated_Code/SystemTimer1.c **** **                           pointer returned by <Init> method.
 188:../Generated_Code/SystemTimer1.c **** **     Returns     :
 189:../Generated_Code/SystemTimer1.c **** **         ---             - Error code, possible codes:
 190:../Generated_Code/SystemTimer1.c **** **                           ERR_OK - OK
 191:../Generated_Code/SystemTimer1.c **** **                           ERR_SPEED - The component does not work in
 192:../Generated_Code/SystemTimer1.c **** **                           the active clock configuration
 193:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 194:../Generated_Code/SystemTimer1.c **** */
 195:../Generated_Code/SystemTimer1.c **** LDD_TError SystemTimer1_Enable(LDD_TDeviceData *DeviceDataPtr)
 196:../Generated_Code/SystemTimer1.c **** {
 189              		.loc 1 196 0
 190              		.cfi_startproc
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              	.LCFI7:
 198              		.cfi_def_cfa_offset 16
 199 0004 00AF     		add	r7, sp, #0
 200              	.LCFI8:
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
 197:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 198:../Generated_Code/SystemTimer1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_ENABLE); /* Enable the device */
 203              		.loc 1 198 0
 204 0008 054B     		ldr	r3, .L10
 205 000a 054A     		ldr	r2, .L10
 206 000c 1268     		ldr	r2, [r2]
 207 000e 0121     		mov	r1, #1
 208 0010 0A43     		orr	r2, r1
 209 0012 1A60     		str	r2, [r3]
 199:../Generated_Code/SystemTimer1.c ****   return ERR_OK;
 210              		.loc 1 199 0
 211 0014 0023     		mov	r3, #0
 200:../Generated_Code/SystemTimer1.c **** }
 212              		.loc 1 200 0
 213 0016 181C     		mov	r0, r3
 214 0018 BD46     		mov	sp, r7
 215 001a 02B0     		add	sp, sp, #8
 216              		@ sp needed for prologue
 217 001c 80BD     		pop	{r7, pc}
 218              	.L11:
 219 001e C046     		.align	2
 220              	.L10:
 221 0020 10E000E0 		.word	-536813552
 222              		.cfi_endproc
 223              	.LFE2:
 225              		.section	.text.SystemTimer1_GetInputFrequency,"ax",%progbits
 226              		.align	2
 227              		.global	SystemTimer1_GetInputFrequency
 228              		.code	16
 229              		.thumb_func
 231              	SystemTimer1_GetInputFrequency:
 232              	.LFB3:
 201:../Generated_Code/SystemTimer1.c **** 
 202:../Generated_Code/SystemTimer1.c **** /*
 203:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 204:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_GetInputFrequency (component TimerUnit_LDD)
 205:../Generated_Code/SystemTimer1.c **** **
 206:../Generated_Code/SystemTimer1.c **** **     Description :
 207:../Generated_Code/SystemTimer1.c **** **         Returns current input frequency of the counter in Hz as
 208:../Generated_Code/SystemTimer1.c **** **         32-bit unsigned integer number. This method can be used only
 209:../Generated_Code/SystemTimer1.c **** **         if <"Input clock source"> property is set to "internal".
 210:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 211:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 212:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 213:../Generated_Code/SystemTimer1.c **** **                           pointer returned by <Init> method.
 214:../Generated_Code/SystemTimer1.c **** **     Returns     :
 215:../Generated_Code/SystemTimer1.c **** **         ---             - Input frequency
 216:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 217:../Generated_Code/SystemTimer1.c **** */
 218:../Generated_Code/SystemTimer1.c **** uint32_t SystemTimer1_GetInputFrequency(LDD_TDeviceData *DeviceDataPtr)
 219:../Generated_Code/SystemTimer1.c **** {
 233              		.loc 1 219 0
 234              		.cfi_startproc
 235 0000 80B5     		push	{r7, lr}
 236              	.LCFI9:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 82B0     		sub	sp, sp, #8
 241              	.LCFI10:
 242              		.cfi_def_cfa_offset 16
 243 0004 00AF     		add	r7, sp, #0
 244              	.LCFI11:
 245              		.cfi_def_cfa_register 7
 246 0006 7860     		str	r0, [r7, #4]
 220:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 221:../Generated_Code/SystemTimer1.c ****   return SystemTimer1_CNT_INP_FREQ_U_0;
 247              		.loc 1 221 0
 248 0008 024B     		ldr	r3, .L14
 222:../Generated_Code/SystemTimer1.c **** }
 249              		.loc 1 222 0
 250 000a 181C     		mov	r0, r3
 251 000c BD46     		mov	sp, r7
 252 000e 02B0     		add	sp, sp, #8
 253              		@ sp needed for prologue
 254 0010 80BD     		pop	{r7, pc}
 255              	.L15:
 256 0012 C046     		.align	2
 257              	.L14:
 258 0014 006CDC02 		.word	48000000
 259              		.cfi_endproc
 260              	.LFE3:
 262              		.section	.text.SystemTimer1_SetPeriodTicks,"ax",%progbits
 263              		.align	2
 264              		.global	SystemTimer1_SetPeriodTicks
 265              		.code	16
 266              		.thumb_func
 268              	SystemTimer1_SetPeriodTicks:
 269              	.LFB4:
 223:../Generated_Code/SystemTimer1.c **** 
 224:../Generated_Code/SystemTimer1.c **** /*
 225:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 226:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_SetPeriodTicks (component TimerUnit_LDD)
 227:../Generated_Code/SystemTimer1.c **** **
 228:../Generated_Code/SystemTimer1.c **** **     Description :
 229:../Generated_Code/SystemTimer1.c **** **         The method sets timer re-initialization period (in timer
 230:../Generated_Code/SystemTimer1.c **** **         ticks). This method is available only if the property
 231:../Generated_Code/SystemTimer1.c **** **         <"Counter restart"> is switched to 'on-match' value.
 232:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 233:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 234:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 235:../Generated_Code/SystemTimer1.c **** **                           pointer returned by <Init> method.
 236:../Generated_Code/SystemTimer1.c **** **         Ticks           - Number of counter ticks before counter
 237:../Generated_Code/SystemTimer1.c **** **                           re-initialization. Value 0 means maximal
 238:../Generated_Code/SystemTimer1.c **** **                           period value the same as "free-running
 239:../Generated_Code/SystemTimer1.c **** **                           mode", e.g. counter overflow or underflow
 240:../Generated_Code/SystemTimer1.c **** **                           without any explicit re-initialization.
 241:../Generated_Code/SystemTimer1.c **** **     Returns     :
 242:../Generated_Code/SystemTimer1.c **** **         ---             - Error code, possible codes:
 243:../Generated_Code/SystemTimer1.c **** **                           ERR_OK - OK 
 244:../Generated_Code/SystemTimer1.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 245:../Generated_Code/SystemTimer1.c **** **                           possible range.
 246:../Generated_Code/SystemTimer1.c **** **                           ERR_SPEED - The component does not work in
 247:../Generated_Code/SystemTimer1.c **** **                           the active clock configuration
 248:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 249:../Generated_Code/SystemTimer1.c **** */
 250:../Generated_Code/SystemTimer1.c **** LDD_TError SystemTimer1_SetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, SystemTimer1_TValueType Tick
 251:../Generated_Code/SystemTimer1.c **** {
 270              		.loc 1 251 0
 271              		.cfi_startproc
 272 0000 80B5     		push	{r7, lr}
 273              	.LCFI12:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              	.LCFI13:
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              	.LCFI14:
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
 284 0008 3960     		str	r1, [r7]
 252:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 253:../Generated_Code/SystemTimer1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 254:../Generated_Code/SystemTimer1.c ****      property to the "yes" value in the "Configuration inspector" */
 255:../Generated_Code/SystemTimer1.c ****   if (Ticks > 16777215U) {             /* Is the given value out of range? */
 285              		.loc 1 255 0
 286 000a 3A68     		ldr	r2, [r7]
 287 000c 074B     		ldr	r3, .L19
 288 000e 9A42     		cmp	r2, r3
 289 0010 01D9     		bls	.L17
 256:../Generated_Code/SystemTimer1.c ****     return ERR_PARAM_TICKS;            /* If yes then error */
 290              		.loc 1 256 0
 291 0012 9823     		mov	r3, #152
 292 0014 06E0     		b	.L18
 293              	.L17:
 257:../Generated_Code/SystemTimer1.c ****   }
 258:../Generated_Code/SystemTimer1.c ****   SysTick_PDD_WriteReloadValueReg(SysTick_BASE_PTR, (uint32_t)(--Ticks));
 294              		.loc 1 258 0
 295 0016 064B     		ldr	r3, .L19+4
 296 0018 3A68     		ldr	r2, [r7]
 297 001a 013A     		sub	r2, r2, #1
 298 001c 3A60     		str	r2, [r7]
 299 001e 3A68     		ldr	r2, [r7]
 300 0020 5A60     		str	r2, [r3, #4]
 259:../Generated_Code/SystemTimer1.c ****   return ERR_OK;                       /* OK */
 301              		.loc 1 259 0
 302 0022 0023     		mov	r3, #0
 303              	.L18:
 260:../Generated_Code/SystemTimer1.c **** }
 304              		.loc 1 260 0
 305 0024 181C     		mov	r0, r3
 306 0026 BD46     		mov	sp, r7
 307 0028 02B0     		add	sp, sp, #8
 308              		@ sp needed for prologue
 309 002a 80BD     		pop	{r7, pc}
 310              	.L20:
 311              		.align	2
 312              	.L19:
 313 002c FFFFFF00 		.word	16777215
 314 0030 10E000E0 		.word	-536813552
 315              		.cfi_endproc
 316              	.LFE4:
 318              		.section	.text.SystemTimer1_GetPeriodTicks,"ax",%progbits
 319              		.align	2
 320              		.global	SystemTimer1_GetPeriodTicks
 321              		.code	16
 322              		.thumb_func
 324              	SystemTimer1_GetPeriodTicks:
 325              	.LFB5:
 261:../Generated_Code/SystemTimer1.c **** 
 262:../Generated_Code/SystemTimer1.c **** /*
 263:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 264:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_GetPeriodTicks (component TimerUnit_LDD)
 265:../Generated_Code/SystemTimer1.c **** **
 266:../Generated_Code/SystemTimer1.c **** **     Description :
 267:../Generated_Code/SystemTimer1.c **** **         Returns the number of counter ticks before re-initialization.
 268:../Generated_Code/SystemTimer1.c **** **         See also method <SetPeriodTicks>. This method is available
 269:../Generated_Code/SystemTimer1.c **** **         only if the property <"Counter restart"> is switched to
 270:../Generated_Code/SystemTimer1.c **** **         'on-match' value.
 271:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 272:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 273:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 274:../Generated_Code/SystemTimer1.c **** **                           pointer returned by <Init> method.
 275:../Generated_Code/SystemTimer1.c **** **       * TicksPtr        - Pointer to return value of the
 276:../Generated_Code/SystemTimer1.c **** **                           number of counter ticks before
 277:../Generated_Code/SystemTimer1.c **** **                           re-initialization
 278:../Generated_Code/SystemTimer1.c **** **     Returns     :
 279:../Generated_Code/SystemTimer1.c **** **         ---             - Error code, possible codes:
 280:../Generated_Code/SystemTimer1.c **** **                           ERR_OK - OK 
 281:../Generated_Code/SystemTimer1.c **** **                           ERR_SPEED - The component does not work in
 282:../Generated_Code/SystemTimer1.c **** **                           the active clock configuration
 283:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 284:../Generated_Code/SystemTimer1.c **** */
 285:../Generated_Code/SystemTimer1.c **** LDD_TError SystemTimer1_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, SystemTimer1_TValueType *Tic
 286:../Generated_Code/SystemTimer1.c **** {
 326              		.loc 1 286 0
 327              		.cfi_startproc
 328 0000 80B5     		push	{r7, lr}
 329              	.LCFI15:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 84B0     		sub	sp, sp, #16
 334              	.LCFI16:
 335              		.cfi_def_cfa_offset 24
 336 0004 00AF     		add	r7, sp, #0
 337              	.LCFI17:
 338              		.cfi_def_cfa_register 7
 339 0006 7860     		str	r0, [r7, #4]
 340 0008 3960     		str	r1, [r7]
 287:../Generated_Code/SystemTimer1.c ****   uint32_t tmp;
 288:../Generated_Code/SystemTimer1.c **** 
 289:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 290:../Generated_Code/SystemTimer1.c ****   tmp = (SystemTimer1_TValueType)(SysTick_PDD_ReadReloadValueReg(SysTick_BASE_PTR));
 341              		.loc 1 290 0
 342 000a 0A4B     		ldr	r3, .L23
 343 000c 5B68     		ldr	r3, [r3, #4]
 344 000e FB60     		str	r3, [r7, #12]
 291:../Generated_Code/SystemTimer1.c ****   *TicksPtr = (SystemTimer1_TValueType)++tmp;
 345              		.loc 1 291 0
 346 0010 FB68     		ldr	r3, [r7, #12]
 347 0012 0133     		add	r3, r3, #1
 348 0014 FB60     		str	r3, [r7, #12]
 349 0016 3B68     		ldr	r3, [r7]
 350 0018 FA68     		ldr	r2, [r7, #12]
 351 001a 1A60     		str	r2, [r3]
 292:../Generated_Code/SystemTimer1.c ****   *TicksPtr &= 0x00FFFFFFUL;
 352              		.loc 1 292 0
 353 001c 3B68     		ldr	r3, [r7]
 354 001e 1B68     		ldr	r3, [r3]
 355 0020 1B02     		lsl	r3, r3, #8
 356 0022 1A0A     		lsr	r2, r3, #8
 357 0024 3B68     		ldr	r3, [r7]
 358 0026 1A60     		str	r2, [r3]
 293:../Generated_Code/SystemTimer1.c ****   return ERR_OK;                       /* OK */
 359              		.loc 1 293 0
 360 0028 0023     		mov	r3, #0
 294:../Generated_Code/SystemTimer1.c **** }
 361              		.loc 1 294 0
 362 002a 181C     		mov	r0, r3
 363 002c BD46     		mov	sp, r7
 364 002e 04B0     		add	sp, sp, #16
 365              		@ sp needed for prologue
 366 0030 80BD     		pop	{r7, pc}
 367              	.L24:
 368 0032 C046     		.align	2
 369              	.L23:
 370 0034 10E000E0 		.word	-536813552
 371              		.cfi_endproc
 372              	.LFE5:
 374              		.section	.text.SystemTimer1_ResetCounter,"ax",%progbits
 375              		.align	2
 376              		.global	SystemTimer1_ResetCounter
 377              		.code	16
 378              		.thumb_func
 380              	SystemTimer1_ResetCounter:
 381              	.LFB6:
 295:../Generated_Code/SystemTimer1.c **** 
 296:../Generated_Code/SystemTimer1.c **** /*
 297:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 298:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_ResetCounter (component TimerUnit_LDD)
 299:../Generated_Code/SystemTimer1.c **** **
 300:../Generated_Code/SystemTimer1.c **** **     Description :
 301:../Generated_Code/SystemTimer1.c **** **         Resets counter. If counter is counting up then it is set to
 302:../Generated_Code/SystemTimer1.c **** **         zero. If counter is counting down then counter is updated to
 303:../Generated_Code/SystemTimer1.c **** **         the reload value.
 304:../Generated_Code/SystemTimer1.c **** **         The method is not available if HW doesn't allow resetting of
 305:../Generated_Code/SystemTimer1.c **** **         the counter.
 306:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 307:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 308:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 309:../Generated_Code/SystemTimer1.c **** **                           pointer returned by <Init> method.
 310:../Generated_Code/SystemTimer1.c **** **     Returns     :
 311:../Generated_Code/SystemTimer1.c **** **         ---             - Error code, possible codes:
 312:../Generated_Code/SystemTimer1.c **** **                           ERR_OK - OK 
 313:../Generated_Code/SystemTimer1.c **** **                           ERR_SPEED - The component does not work in
 314:../Generated_Code/SystemTimer1.c **** **                           the active clock configuration
 315:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 316:../Generated_Code/SystemTimer1.c **** */
 317:../Generated_Code/SystemTimer1.c **** LDD_TError SystemTimer1_ResetCounter(LDD_TDeviceData *DeviceDataPtr)
 318:../Generated_Code/SystemTimer1.c **** {
 382              		.loc 1 318 0
 383              		.cfi_startproc
 384 0000 80B5     		push	{r7, lr}
 385              	.LCFI18:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 7, -8
 388              		.cfi_offset 14, -4
 389 0002 82B0     		sub	sp, sp, #8
 390              	.LCFI19:
 391              		.cfi_def_cfa_offset 16
 392 0004 00AF     		add	r7, sp, #0
 393              	.LCFI20:
 394              		.cfi_def_cfa_register 7
 395 0006 7860     		str	r0, [r7, #4]
 319:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 320:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} Critical section begin (RTOS function call is defined by MQXLite RTOS A
 321:../Generated_Code/SystemTimer1.c ****   _int_disable();
 396              		.loc 1 321 0
 397 0008 FFF7FEFF 		bl	_int_disable
 322:../Generated_Code/SystemTimer1.c ****   if ((SysTick_PDD_GetEnableDeviceStatus(SysTick_BASE_PTR)) != 0U) {
 398              		.loc 1 322 0
 399 000c 0B4B     		ldr	r3, .L28
 400 000e 1A68     		ldr	r2, [r3]
 401 0010 0123     		mov	r3, #1
 402 0012 1340     		and	r3, r2
 403 0014 0BD0     		beq	.L26
 323:../Generated_Code/SystemTimer1.c ****     SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_DISABLE);
 404              		.loc 1 323 0
 405 0016 094B     		ldr	r3, .L28
 406 0018 084A     		ldr	r2, .L28
 407 001a 1268     		ldr	r2, [r2]
 408 001c 0121     		mov	r1, #1
 409 001e 8A43     		bic	r2, r1
 410 0020 1A60     		str	r2, [r3]
 324:../Generated_Code/SystemTimer1.c ****     SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_ENABLE);
 411              		.loc 1 324 0
 412 0022 064B     		ldr	r3, .L28
 413 0024 054A     		ldr	r2, .L28
 414 0026 1268     		ldr	r2, [r2]
 415 0028 0121     		mov	r1, #1
 416 002a 0A43     		orr	r2, r1
 417 002c 1A60     		str	r2, [r3]
 418              	.L26:
 325:../Generated_Code/SystemTimer1.c ****   }
 326:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} Critical section ends (RTOS function call is defined by MQXLite RTOS Ad
 327:../Generated_Code/SystemTimer1.c ****   _int_enable();
 419              		.loc 1 327 0
 420 002e FFF7FEFF 		bl	_int_enable
 328:../Generated_Code/SystemTimer1.c ****   return ERR_OK;                       /* OK */
 421              		.loc 1 328 0
 422 0032 0023     		mov	r3, #0
 329:../Generated_Code/SystemTimer1.c **** }
 423              		.loc 1 329 0
 424 0034 181C     		mov	r0, r3
 425 0036 BD46     		mov	sp, r7
 426 0038 02B0     		add	sp, sp, #8
 427              		@ sp needed for prologue
 428 003a 80BD     		pop	{r7, pc}
 429              	.L29:
 430              		.align	2
 431              	.L28:
 432 003c 10E000E0 		.word	-536813552
 433              		.cfi_endproc
 434              	.LFE6:
 436              		.section	.text.SystemTimer1_GetCounterValue,"ax",%progbits
 437              		.align	2
 438              		.global	SystemTimer1_GetCounterValue
 439              		.code	16
 440              		.thumb_func
 442              	SystemTimer1_GetCounterValue:
 443              	.LFB7:
 330:../Generated_Code/SystemTimer1.c **** 
 331:../Generated_Code/SystemTimer1.c **** /*
 332:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 333:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_GetCounterValue (component TimerUnit_LDD)
 334:../Generated_Code/SystemTimer1.c **** **
 335:../Generated_Code/SystemTimer1.c **** **     Description :
 336:../Generated_Code/SystemTimer1.c **** **         Returns the content of counter register. This method can be
 337:../Generated_Code/SystemTimer1.c **** **         used both if counter is enabled and if counter is disabled.
 338:../Generated_Code/SystemTimer1.c **** **         The method is not available if HW doesn't allow reading of
 339:../Generated_Code/SystemTimer1.c **** **         the counter.
 340:../Generated_Code/SystemTimer1.c **** **     Parameters  :
 341:../Generated_Code/SystemTimer1.c **** **         NAME            - DESCRIPTION
 342:../Generated_Code/SystemTimer1.c **** **       * DeviceDataPtr   - Device data structure
 343:../Generated_Code/SystemTimer1.c **** **                           pointer returned by <Init> method.
 344:../Generated_Code/SystemTimer1.c **** **     Returns     :
 345:../Generated_Code/SystemTimer1.c **** **         ---             - Counter value (number of counted ticks).
 346:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 347:../Generated_Code/SystemTimer1.c **** */
 348:../Generated_Code/SystemTimer1.c **** SystemTimer1_TValueType SystemTimer1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 349:../Generated_Code/SystemTimer1.c **** {
 444              		.loc 1 349 0
 445              		.cfi_startproc
 446 0000 80B5     		push	{r7, lr}
 447              	.LCFI21:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 82B0     		sub	sp, sp, #8
 452              	.LCFI22:
 453              		.cfi_def_cfa_offset 16
 454 0004 00AF     		add	r7, sp, #0
 455              	.LCFI23:
 456              		.cfi_def_cfa_register 7
 457 0006 7860     		str	r0, [r7, #4]
 350:../Generated_Code/SystemTimer1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 351:../Generated_Code/SystemTimer1.c ****   return (SystemTimer1_TValueType)SysTick_PDD_ReadCurrentValueReg(SysTick_BASE_PTR);
 458              		.loc 1 351 0
 459 0008 024B     		ldr	r3, .L32
 460 000a 9B68     		ldr	r3, [r3, #8]
 352:../Generated_Code/SystemTimer1.c **** }
 461              		.loc 1 352 0
 462 000c 181C     		mov	r0, r3
 463 000e BD46     		mov	sp, r7
 464 0010 02B0     		add	sp, sp, #8
 465              		@ sp needed for prologue
 466 0012 80BD     		pop	{r7, pc}
 467              	.L33:
 468              		.align	2
 469              	.L32:
 470 0014 10E000E0 		.word	-536813552
 471              		.cfi_endproc
 472              	.LFE7:
 474              		.section	.text.SystemTimer1_Interrupt,"ax",%progbits
 475              		.align	2
 476              		.global	SystemTimer1_Interrupt
 477              		.code	16
 478              		.thumb_func
 480              	SystemTimer1_Interrupt:
 481              	.LFB8:
 353:../Generated_Code/SystemTimer1.c **** 
 354:../Generated_Code/SystemTimer1.c **** /*
 355:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 356:../Generated_Code/SystemTimer1.c **** **     Method      :  SystemTimer1_Interrupt (component TimerUnit_LDD)
 357:../Generated_Code/SystemTimer1.c **** **
 358:../Generated_Code/SystemTimer1.c **** **     Description :
 359:../Generated_Code/SystemTimer1.c **** **         The method services the interrupt of the selected peripheral(s)
 360:../Generated_Code/SystemTimer1.c **** **         and eventually invokes event(s) of the component.
 361:../Generated_Code/SystemTimer1.c **** **         This method is internal. It is used by Processor Expert only.
 362:../Generated_Code/SystemTimer1.c **** ** ===================================================================
 363:../Generated_Code/SystemTimer1.c **** */
 364:../Generated_Code/SystemTimer1.c **** void SystemTimer1_Interrupt(LDD_RTOS_TISRParameter _isrParameter)
 365:../Generated_Code/SystemTimer1.c **** {
 482              		.loc 1 365 0
 483              		.cfi_startproc
 484 0000 80B5     		push	{r7, lr}
 485              	.LCFI24:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 84B0     		sub	sp, sp, #16
 490              	.LCFI25:
 491              		.cfi_def_cfa_offset 24
 492 0004 00AF     		add	r7, sp, #0
 493              	.LCFI26:
 494              		.cfi_def_cfa_register 7
 495 0006 7860     		str	r0, [r7, #4]
 366:../Generated_Code/SystemTimer1.c ****   /* {MQXLite RTOS Adapter} ISR parameter is passed as parameter from RTOS interrupt dispatcher */
 367:../Generated_Code/SystemTimer1.c ****   SystemTimer1_TDeviceDataPtr DeviceDataPrv = (SystemTimer1_TDeviceDataPtr)_isrParameter;
 496              		.loc 1 367 0
 497 0008 7B68     		ldr	r3, [r7, #4]
 498 000a FB60     		str	r3, [r7, #12]
 368:../Generated_Code/SystemTimer1.c **** 
 369:../Generated_Code/SystemTimer1.c ****   SysTick_PDD_ClearInterruptFlag(SysTick_BASE_PTR); /* Clear interrupt flag */
 499              		.loc 1 369 0
 500 000c 064B     		ldr	r3, .L35
 501 000e 064A     		ldr	r2, .L35
 502 0010 1168     		ldr	r1, [r2]
 503 0012 064A     		ldr	r2, .L35+4
 504 0014 0A40     		and	r2, r1
 505 0016 1A60     		str	r2, [r3]
 370:../Generated_Code/SystemTimer1.c ****   SystemTimer1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 506              		.loc 1 370 0
 507 0018 FB68     		ldr	r3, [r7, #12]
 508 001a 9B68     		ldr	r3, [r3, #8]
 509 001c 181C     		mov	r0, r3
 510 001e FFF7FEFF 		bl	SystemTimer1_OnCounterRestart
 371:../Generated_Code/SystemTimer1.c **** }
 511              		.loc 1 371 0
 512 0022 BD46     		mov	sp, r7
 513 0024 04B0     		add	sp, sp, #16
 514              		@ sp needed for prologue
 515 0026 80BD     		pop	{r7, pc}
 516              	.L36:
 517              		.align	2
 518              	.L35:
 519 0028 10E000E0 		.word	-536813552
 520 002c FFFFFEFF 		.word	-65537
 521              		.cfi_endproc
 522              	.LFE8:
 524              		.text
 525              	.Letext0:
 526              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 527              		.file 3 "../Generated_Code/IO_Map.h"
 528              		.file 4 "../Generated_Code/PE_LDD.h"
 529              		.file 5 "../Generated_Code/SystemTimer1.h"
 530              		.file 6 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/psp/cortex_m/psptypes.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SystemTimer1.c
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:24     .text.SystemTimer1_Init:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:29     .text.SystemTimer1_Init:00000000 SystemTimer1_Init
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:114    .text.SystemTimer1_Init:00000074 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:480    .text.SystemTimer1_Interrupt:00000000 SystemTimer1_Interrupt
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:124    .text.SystemTimer1_Deinit:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:129    .text.SystemTimer1_Deinit:00000000 SystemTimer1_Deinit
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:176    .text.SystemTimer1_Deinit:00000038 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:182    .text.SystemTimer1_Enable:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:187    .text.SystemTimer1_Enable:00000000 SystemTimer1_Enable
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:221    .text.SystemTimer1_Enable:00000020 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:226    .text.SystemTimer1_GetInputFrequency:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:231    .text.SystemTimer1_GetInputFrequency:00000000 SystemTimer1_GetInputFrequency
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:258    .text.SystemTimer1_GetInputFrequency:00000014 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:263    .text.SystemTimer1_SetPeriodTicks:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:268    .text.SystemTimer1_SetPeriodTicks:00000000 SystemTimer1_SetPeriodTicks
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:313    .text.SystemTimer1_SetPeriodTicks:0000002c $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:319    .text.SystemTimer1_GetPeriodTicks:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:324    .text.SystemTimer1_GetPeriodTicks:00000000 SystemTimer1_GetPeriodTicks
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:370    .text.SystemTimer1_GetPeriodTicks:00000034 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:375    .text.SystemTimer1_ResetCounter:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:380    .text.SystemTimer1_ResetCounter:00000000 SystemTimer1_ResetCounter
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:432    .text.SystemTimer1_ResetCounter:0000003c $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:437    .text.SystemTimer1_GetCounterValue:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:442    .text.SystemTimer1_GetCounterValue:00000000 SystemTimer1_GetCounterValue
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:470    .text.SystemTimer1_GetCounterValue:00000014 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:475    .text.SystemTimer1_Interrupt:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccNDDHmP.s:519    .text.SystemTimer1_Interrupt:00000028 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_int_get_isr_data
_int_install_isr
PE_LDD_DeviceDataList
_int_disable
_int_enable
SystemTimer1_OnCounterRestart
