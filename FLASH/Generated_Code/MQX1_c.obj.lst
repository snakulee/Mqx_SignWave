   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"MQX1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	Task_Default_task_stack,1152,4
  18              		.comm	Task_Dac_task_stack,2176,4
  19              		.global	mqx_task_stack_pointers
  20              		.section	.data.mqx_task_stack_pointers,"aw",%progbits
  21              		.align	2
  24              	mqx_task_stack_pointers:
  25 0000 00000000 		.word	Task_Default_task_stack
  26 0004 00000000 		.word	Task_Dac_task_stack
  27 0008 00000000 		.word	0
  28              		.comm	_mqx_kernel_data_struct,576,4
  29              		.comm	mqx_static_ready_queue,192,4
  30              		.comm	mqx_static_isr_table,252,4
  31              		.comm	mqx_interrupt_stack,272,4
  32              		.comm	mqx_idle_task_stack,288,4
  33              		.comm	mqx_system_stack,168,4
  34              		.global	MQX_init_struct
  35              		.section	.rodata.MQX_init_struct,"a",%progbits
  36              		.align	2
  39              	MQX_init_struct:
  40 0000 01000000 		.word	1
  41 0004 00000000 		.word	_mqx_kernel_data_struct
  42 0008 40020000 		.word	_mqx_kernel_data_struct+576
  43 000c 01000000 		.word	1
  44 0010 10010000 		.word	272
  45 0014 00000000 		.word	mqx_interrupt_stack
  46 0018 20010000 		.word	288
  47 001c 00000000 		.word	mqx_idle_task_stack
  48 0020 00000000 		.word	MQX_template_list
  49              		.section	.text.SystemTimer1_OnCounterRestart,"ax",%progbits
  50              		.align	2
  51              		.global	SystemTimer1_OnCounterRestart
  52              		.code	16
  53              		.thumb_func
  55              	SystemTimer1_OnCounterRestart:
  56              	.LFB0:
  57              		.file 1 "../Generated_Code/MQX1.c"
   1:../Generated_Code/MQX1.c **** /** ###################################################################
   2:../Generated_Code/MQX1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/MQX1.c **** **     Filename    : MQX1.c
   4:../Generated_Code/MQX1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/MQX1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/MQX1.c **** **     Version     : Component 01.093, Driver 01.00, CPU db: 3.00.000
   7:../Generated_Code/MQX1.c **** **     Compiler    : GNU C Compiler
   8:../Generated_Code/MQX1.c **** **     Date/Time   : 2013-02-25, 13:19, # CodeGen: 24
   9:../Generated_Code/MQX1.c **** **     Abstract    :
  10:../Generated_Code/MQX1.c **** **         MQX Lite RTOS Adapter component.
  11:../Generated_Code/MQX1.c **** **     Settings    :
  12:../Generated_Code/MQX1.c **** **
  13:../Generated_Code/MQX1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  14:../Generated_Code/MQX1.c **** **     
  15:../Generated_Code/MQX1.c **** **     http      : www.freescale.com
  16:../Generated_Code/MQX1.c **** **     mail      : support@freescale.com
  17:../Generated_Code/MQX1.c **** ** ###################################################################*/
  18:../Generated_Code/MQX1.c **** 
  19:../Generated_Code/MQX1.c **** /* MODULE MQX1. */
  20:../Generated_Code/MQX1.c **** 
  21:../Generated_Code/MQX1.c **** #include "MQX1.h"
  22:../Generated_Code/MQX1.c **** #include "mqx_tasks.h"
  23:../Generated_Code/MQX1.c **** 
  24:../Generated_Code/MQX1.c **** 
  25:../Generated_Code/MQX1.c **** 
  26:../Generated_Code/MQX1.c **** /* Task stacks definition */
  27:../Generated_Code/MQX1.c **** uint8_t Task_Default_task_stack[TASK_DEFAULT_TASK_STACK_SIZE];
  28:../Generated_Code/MQX1.c **** uint8_t Task_Dac_task_stack[TASK_DAC_TASK_STACK_SIZE];
  29:../Generated_Code/MQX1.c **** 
  30:../Generated_Code/MQX1.c **** /* Task stacks array of pointers */
  31:../Generated_Code/MQX1.c **** const uint8_t * mqx_task_stack_pointers[] = {
  32:../Generated_Code/MQX1.c **** /* "Task_Default" task                 */  Task_Default_task_stack,
  33:../Generated_Code/MQX1.c **** /* "Task_Dac" task                     */  Task_Dac_task_stack,
  34:../Generated_Code/MQX1.c **** /* Stack array end                     */  NULL
  35:../Generated_Code/MQX1.c **** };
  36:../Generated_Code/MQX1.c **** 
  37:../Generated_Code/MQX1.c **** /* Kernel Data Structure */
  38:../Generated_Code/MQX1.c **** volatile KERNEL_DATA_STRUCT            _mqx_kernel_data_struct;
  39:../Generated_Code/MQX1.c **** #define __KERNEL_DATA_START            (pointer)(&_mqx_kernel_data_struct)
  40:../Generated_Code/MQX1.c **** #define __KERNEL_DATA_END              (pointer)((uchar_ptr)&_mqx_kernel_data_struct + sizeof(_mqx_
  41:../Generated_Code/MQX1.c **** 
  42:../Generated_Code/MQX1.c **** /* Task ready queue */
  43:../Generated_Code/MQX1.c **** READY_Q_STRUCT                         mqx_static_ready_queue[MQX_READY_QUEUE_ITEMS];
  44:../Generated_Code/MQX1.c **** 
  45:../Generated_Code/MQX1.c **** /* Table of 'C' handlers for interrupts. */
  46:../Generated_Code/MQX1.c **** INTERRUPT_TABLE_STRUCT                 mqx_static_isr_table[MQX_INTERRUPT_TABLE_ITEMS];
  47:../Generated_Code/MQX1.c **** 
  48:../Generated_Code/MQX1.c **** 
  49:../Generated_Code/MQX1.c **** /* Interrupt stack */
  50:../Generated_Code/MQX1.c **** uint8_t mqx_interrupt_stack[MQX_INTERRUPT_STACK_SIZE + PSP_STACK_ALIGNMENT + 1];
  51:../Generated_Code/MQX1.c **** /* Idle task stack */
  52:../Generated_Code/MQX1.c **** uint8_t mqx_idle_task_stack[sizeof(TD_STRUCT) + PSP_IDLE_STACK_SIZE + PSP_STACK_ALIGNMENT + 1];
  53:../Generated_Code/MQX1.c **** /* System stack */
  54:../Generated_Code/MQX1.c **** uint8_t mqx_system_stack[PSP_MINSTACKSIZE + PSP_STACK_ALIGNMENT + 1];
  55:../Generated_Code/MQX1.c **** 
  56:../Generated_Code/MQX1.c **** /* MQX Lite initialization structure */
  57:../Generated_Code/MQX1.c **** const MQXLITE_INITIALIZATION_STRUCT  MQX_init_struct =
  58:../Generated_Code/MQX1.c **** {
  59:../Generated_Code/MQX1.c **** /* PROCESSOR NUMBER                 */  1,
  60:../Generated_Code/MQX1.c **** /* START OF KERNEL MEMORY           */  __KERNEL_DATA_START,
  61:../Generated_Code/MQX1.c **** /* END OF KERNEL MEMORY             */  __KERNEL_DATA_END,
  62:../Generated_Code/MQX1.c **** /* MQX_HARDWARE_INTERRUPT_LEVEL_MAX */  1,
  63:../Generated_Code/MQX1.c **** /* INTERRUPT STACK SIZE             */  sizeof(mqx_interrupt_stack),
  64:../Generated_Code/MQX1.c **** /* INTERRUPT STACK LOCATION         */  mqx_interrupt_stack,
  65:../Generated_Code/MQX1.c **** /* IDLE_TASK STACK SIZE             */  sizeof(mqx_idle_task_stack),
  66:../Generated_Code/MQX1.c **** /* IDLE_TASK STACK_LOCATION         */  mqx_idle_task_stack,
  67:../Generated_Code/MQX1.c **** /* TASK TEMPLATE LIST               */  (TASK_TEMPLATE_STRUCT_PTR)&MQX_template_list[0]
  68:../Generated_Code/MQX1.c **** };
  69:../Generated_Code/MQX1.c **** 
  70:../Generated_Code/MQX1.c **** /*
  71:../Generated_Code/MQX1.c **** ** ===================================================================
  72:../Generated_Code/MQX1.c **** **     Method      :  MQX1_OnCounterRestart (component MQXLite)
  73:../Generated_Code/MQX1.c **** **
  74:../Generated_Code/MQX1.c **** **     Description :
  75:../Generated_Code/MQX1.c **** **         This method is internal. It is used by Processor Expert only.
  76:../Generated_Code/MQX1.c **** ** ===================================================================
  77:../Generated_Code/MQX1.c **** */
  78:../Generated_Code/MQX1.c **** void SystemTimer1_OnCounterRestart(LDD_TUserData *UserDataPtr)
  79:../Generated_Code/MQX1.c **** {
  58              		.loc 1 79 0
  59              		.cfi_startproc
  60 0000 80B5     		push	{r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 82B0     		sub	sp, sp, #8
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 16
  68 0004 00AF     		add	r7, sp, #0
  69              	.LCFI2:
  70              		.cfi_def_cfa_register 7
  71 0006 7860     		str	r0, [r7, #4]
  80:../Generated_Code/MQX1.c ****     _time_notify_kernel();
  72              		.loc 1 80 0
  73 0008 FFF7FEFF 		bl	_time_notify_kernel
  81:../Generated_Code/MQX1.c **** }
  74              		.loc 1 81 0
  75 000c BD46     		mov	sp, r7
  76 000e 02B0     		add	sp, sp, #8
  77              		@ sp needed for prologue
  78 0010 80BD     		pop	{r7, pc}
  79              		.cfi_endproc
  80              	.LFE0:
  82              		.global	__aeabi_uidiv
  83 0012 C046     		.section	.text.SystemTimer1_GetTicsPerSecond,"ax",%progbits
  84              		.align	2
  85              		.global	SystemTimer1_GetTicsPerSecond
  86              		.code	16
  87              		.thumb_func
  89              	SystemTimer1_GetTicsPerSecond:
  90              	.LFB1:
  82:../Generated_Code/MQX1.c **** 
  83:../Generated_Code/MQX1.c **** 
  84:../Generated_Code/MQX1.c **** /* Function returns number of ticks per second for system timer */
  85:../Generated_Code/MQX1.c **** uint32_t  SystemTimer1_GetTicsPerSecond(LDD_TDeviceData *DeviceDataPtr)
  86:../Generated_Code/MQX1.c **** {
  91              		.loc 1 86 0
  92              		.cfi_startproc
  93 0000 80B5     		push	{r7, lr}
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 84B0     		sub	sp, sp, #16
  99              	.LCFI4:
 100              		.cfi_def_cfa_offset 24
 101 0004 00AF     		add	r7, sp, #0
 102              	.LCFI5:
 103              		.cfi_def_cfa_register 7
 104 0006 7860     		str	r0, [r7, #4]
  87:../Generated_Code/MQX1.c ****     uint32_t input_frequency;
  88:../Generated_Code/MQX1.c ****     uint32_t period_ticks;
  89:../Generated_Code/MQX1.c **** 
  90:../Generated_Code/MQX1.c ****     /* Parameter DeviceDataPtr is not used, suppress unused argument warning */
  91:../Generated_Code/MQX1.c ****     (void)DeviceDataPtr;
  92:../Generated_Code/MQX1.c ****     input_frequency = SystemTimer1_GetInputFrequency(NULL);
 105              		.loc 1 92 0
 106 0008 0020     		mov	r0, #0
 107 000a FFF7FEFF 		bl	SystemTimer1_GetInputFrequency
 108 000e 031C     		mov	r3, r0
 109 0010 FB60     		str	r3, [r7, #12]
  93:../Generated_Code/MQX1.c ****     SystemTimer1_GetPeriodTicks(NULL, &period_ticks);
 110              		.loc 1 93 0
 111 0012 3B1C     		mov	r3, r7
 112 0014 0833     		add	r3, r3, #8
 113 0016 0020     		mov	r0, #0
 114 0018 191C     		mov	r1, r3
 115 001a FFF7FEFF 		bl	SystemTimer1_GetPeriodTicks
  94:../Generated_Code/MQX1.c ****     return input_frequency / (period_ticks);
 116              		.loc 1 94 0
 117 001e BB68     		ldr	r3, [r7, #8]
 118 0020 F868     		ldr	r0, [r7, #12]
 119 0022 191C     		mov	r1, r3
 120 0024 FFF7FEFF 		bl	__aeabi_uidiv
 121 0028 031C     		mov	r3, r0
  95:../Generated_Code/MQX1.c **** }
 122              		.loc 1 95 0
 123 002a 181C     		mov	r0, r3
 124 002c BD46     		mov	sp, r7
 125 002e 04B0     		add	sp, sp, #16
 126              		@ sp needed for prologue
 127 0030 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE1:
 131 0032 C046     		.text
 132              	.Letext0:
 133              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 134              		.file 3 "../Generated_Code/PE_LDD.h"
 135              		.file 4 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/psp/cortex_m/psptypes.h"
 136              		.file 5 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/mqxlite.h"
 137              		.file 6 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/queue.h"
 138              		.file 7 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/lwsem.h"
 139              		.file 8 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/psp/cortex_m/cortex.h"
 140              		.file 9 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/mqxlite_prv.h"
 141              		.file 10 "../Generated_Code/MQX1.h"
 142              		.file 11 "../Generated_Code/IO_Map.h"
DEFINED SYMBOLS
                            *ABS*:00000000 MQX1.c
                            *COM*:00000480 Task_Default_task_stack
                            *COM*:00000880 Task_Dac_task_stack
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:24     .data.mqx_task_stack_pointers:00000000 mqx_task_stack_pointers
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:21     .data.mqx_task_stack_pointers:00000000 $d
                            *COM*:00000240 _mqx_kernel_data_struct
                            *COM*:000000c0 mqx_static_ready_queue
                            *COM*:000000fc mqx_static_isr_table
                            *COM*:00000110 mqx_interrupt_stack
                            *COM*:00000120 mqx_idle_task_stack
                            *COM*:000000a8 mqx_system_stack
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:39     .rodata.MQX_init_struct:00000000 MQX_init_struct
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:36     .rodata.MQX_init_struct:00000000 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:50     .text.SystemTimer1_OnCounterRestart:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:55     .text.SystemTimer1_OnCounterRestart:00000000 SystemTimer1_OnCounterRestart
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:84     .text.SystemTimer1_GetTicsPerSecond:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cclzlQlb.s:89     .text.SystemTimer1_GetTicsPerSecond:00000000 SystemTimer1_GetTicsPerSecond
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
MQX_template_list
_time_notify_kernel
__aeabi_uidiv
SystemTimer1_GetInputFrequency
SystemTimer1_GetPeriodTicks
