   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"IO1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	24
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.text.IO1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	IO1_Init
  26              		.code	16
  27              		.thumb_func
  29              	IO1_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/IO1.c"
   1:../Generated_Code/IO1.c **** /** ###################################################################
   2:../Generated_Code/IO1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/IO1.c **** **     Filename    : IO1.c
   4:../Generated_Code/IO1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/IO1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/IO1.c **** **     Component   : Serial_LDD
   7:../Generated_Code/IO1.c **** **     Version     : Component 01.165, Driver 01.10, CPU db: 3.00.000
   8:../Generated_Code/IO1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/IO1.c **** **     Date/Time   : 2013-02-22, 17:13, # CodeGen: 18
  10:../Generated_Code/IO1.c **** **     Abstract    :
  11:../Generated_Code/IO1.c **** **         This component "Serial_LDD" implements an asynchronous serial
  12:../Generated_Code/IO1.c **** **         communication. The component supports different settings of
  13:../Generated_Code/IO1.c **** **         parity, word width, stop-bit and communication speed,
  14:../Generated_Code/IO1.c **** **         user can select interrupt or polling handler.
  15:../Generated_Code/IO1.c **** **         Communication speed can be changed also in runtime.
  16:../Generated_Code/IO1.c **** **         The component requires one on-chip asynchronous serial communication channel.
  17:../Generated_Code/IO1.c **** **     Settings    :
  18:../Generated_Code/IO1.c **** **          Component name                                 : IO1
  19:../Generated_Code/IO1.c **** **          Device                                         : UART0
  20:../Generated_Code/IO1.c **** **          Interrupt service/event                        : Disabled
  21:../Generated_Code/IO1.c **** **          Settings                                       : 
  22:../Generated_Code/IO1.c **** **            Data width                                   : 8 bits
  23:../Generated_Code/IO1.c **** **            Parity                                       : None
  24:../Generated_Code/IO1.c **** **            Stop bits                                    : 1
  25:../Generated_Code/IO1.c **** **            Loop mode                                    : Normal
  26:../Generated_Code/IO1.c **** **            Baud rate                                    : 115200 baud
  27:../Generated_Code/IO1.c **** **            Wakeup condition                             : Idle line wakeup
  28:../Generated_Code/IO1.c **** **            Stop in wait mode                            : no
  29:../Generated_Code/IO1.c **** **            Idle line mode                               : Starts after start bit
  30:../Generated_Code/IO1.c **** **            Transmitter output                           : Not inverted
  31:../Generated_Code/IO1.c **** **            Receiver input                               : Not inverted
  32:../Generated_Code/IO1.c **** **            Break generation length                      : 10/11 bits
  33:../Generated_Code/IO1.c **** **            Receiver                                     : Enabled
  34:../Generated_Code/IO1.c **** **              RxD                                        : TSI0_CH2/PTA1/UART0_RX/TPM2_CH0
  35:../Generated_Code/IO1.c **** **              RxD pin signal                             : 
  36:../Generated_Code/IO1.c **** **            Transmitter                                  : Enabled
  37:../Generated_Code/IO1.c **** **              TxD                                        : TSI0_CH3/PTA2/UART0_TX/TPM2_CH1
  38:../Generated_Code/IO1.c **** **              TxD pin signal                             : 
  39:../Generated_Code/IO1.c **** **            Flow control                                 : None
  40:../Generated_Code/IO1.c **** **          Initialization                                 : 
  41:../Generated_Code/IO1.c **** **            Enabled in init. code                        : yes
  42:../Generated_Code/IO1.c **** **            Auto initialization                          : yes
  43:../Generated_Code/IO1.c **** **            Event mask                                   : 
  44:../Generated_Code/IO1.c **** **              OnBlockSent                                : Disabled
  45:../Generated_Code/IO1.c **** **              OnBlockReceived                            : Disabled
  46:../Generated_Code/IO1.c **** **              OnTxComplete                               : Disabled
  47:../Generated_Code/IO1.c **** **              OnError                                    : Disabled
  48:../Generated_Code/IO1.c **** **              OnBreak                                    : Disabled
  49:../Generated_Code/IO1.c **** **          CPU clock/configuration selection              : 
  50:../Generated_Code/IO1.c **** **            Clock configuration 0                        : This component enabled
  51:../Generated_Code/IO1.c **** **            Clock configuration 1                        : This component enabled
  52:../Generated_Code/IO1.c **** **            Clock configuration 2                        : This component enabled
  53:../Generated_Code/IO1.c **** **            Clock configuration 3                        : This component enabled
  54:../Generated_Code/IO1.c **** **            Clock configuration 4                        : This component enabled
  55:../Generated_Code/IO1.c **** **            Clock configuration 5                        : This component enabled
  56:../Generated_Code/IO1.c **** **            Clock configuration 6                        : This component enabled
  57:../Generated_Code/IO1.c **** **            Clock configuration 7                        : This component enabled
  58:../Generated_Code/IO1.c **** **     Contents    :
  59:../Generated_Code/IO1.c **** **         Init - LDD_TDeviceData* IO1_Init(LDD_TUserData *UserDataPtr);
  60:../Generated_Code/IO1.c **** **         Main - void IO1_Main(LDD_TDeviceData *DeviceDataPtr);
  61:../Generated_Code/IO1.c **** **
  62:../Generated_Code/IO1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  63:../Generated_Code/IO1.c **** **     
  64:../Generated_Code/IO1.c **** **     http      : www.freescale.com
  65:../Generated_Code/IO1.c **** **     mail      : support@freescale.com
  66:../Generated_Code/IO1.c **** ** ###################################################################*/
  67:../Generated_Code/IO1.c **** 
  68:../Generated_Code/IO1.c **** /* MODULE IO1. */
  69:../Generated_Code/IO1.c **** /*lint -save  -e926 -e927 -e928 -e929 -e572 Disable MISRA rule (11.4,12.8) checking. */
  70:../Generated_Code/IO1.c **** 
  71:../Generated_Code/IO1.c **** /* MQX Lite include files */
  72:../Generated_Code/IO1.c **** #include "mqxlite.h"
  73:../Generated_Code/IO1.c **** #include "mqxlite_prv.h"
  74:../Generated_Code/IO1.c **** #include "IO1.h"
  75:../Generated_Code/IO1.c **** #include "UART0_PDD.h"
  76:../Generated_Code/IO1.c **** 
  77:../Generated_Code/IO1.c **** #define AVAILABLE_EVENTS_MASK 0x00U
  78:../Generated_Code/IO1.c **** 
  79:../Generated_Code/IO1.c **** /* {MQXLite RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  80:../Generated_Code/IO1.c **** static IO1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  81:../Generated_Code/IO1.c **** 
  82:../Generated_Code/IO1.c **** /*
  83:../Generated_Code/IO1.c **** ** ===================================================================
  84:../Generated_Code/IO1.c **** **     Method      :  IO1_Init (component Serial_LDD)
  85:../Generated_Code/IO1.c **** **
  86:../Generated_Code/IO1.c **** **     Description :
  87:../Generated_Code/IO1.c **** **         Initializes the device. Allocates memory for the device data
  88:../Generated_Code/IO1.c **** **         structure, allocates interrupt vectors and sets interrupt
  89:../Generated_Code/IO1.c **** **         priority, sets pin routing, sets timing, etc. If the "Enable
  90:../Generated_Code/IO1.c **** **         in init. code" is set to "yes" value then the device is also
  91:../Generated_Code/IO1.c **** **         enabled(see the description of the Enable() method). In this
  92:../Generated_Code/IO1.c **** **         case the Enable() method is not necessary and needn't to be
  93:../Generated_Code/IO1.c **** **         generated. 
  94:../Generated_Code/IO1.c **** **     Parameters  :
  95:../Generated_Code/IO1.c **** **         NAME            - DESCRIPTION
  96:../Generated_Code/IO1.c **** **       * UserDataPtr     - Pointer to the user or
  97:../Generated_Code/IO1.c **** **                           RTOS specific data. This pointer will be
  98:../Generated_Code/IO1.c **** **                           passed as an event or callback parameter.
  99:../Generated_Code/IO1.c **** **     Returns     :
 100:../Generated_Code/IO1.c **** **         ---             - Device data structure pointer.
 101:../Generated_Code/IO1.c **** ** ===================================================================
 102:../Generated_Code/IO1.c **** */
 103:../Generated_Code/IO1.c **** LDD_TDeviceData* IO1_Init(LDD_TUserData *UserDataPtr)
 104:../Generated_Code/IO1.c **** {
  32              		.loc 1 104 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 105:../Generated_Code/IO1.c ****   /* Allocate device structure */
 106:../Generated_Code/IO1.c ****   IO1_TDeviceDataPtr DeviceDataPrv;
 107:../Generated_Code/IO1.c ****   /* {MQXLite RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 108:../Generated_Code/IO1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 108 0
  47 0008 4B4B     		ldr	r3, .L3
  48 000a FB60     		str	r3, [r7, #12]
 109:../Generated_Code/IO1.c **** 
 110:../Generated_Code/IO1.c ****   /* Clear the receive counters and pointer */
 111:../Generated_Code/IO1.c ****   DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
  49              		.loc 1 111 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 0022     		mov	r2, #0
  52 0010 5A80     		strh	r2, [r3, #2]
 112:../Generated_Code/IO1.c ****   DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlo
  53              		.loc 1 112 0
  54 0012 FB68     		ldr	r3, [r7, #12]
  55 0014 0022     		mov	r2, #0
  56 0016 1A81     		strh	r2, [r3, #8]
 113:../Generated_Code/IO1.c ****   DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
  57              		.loc 1 113 0
  58 0018 FB68     		ldr	r3, [r7, #12]
  59 001a 0022     		mov	r2, #0
  60 001c 5A60     		str	r2, [r3, #4]
 114:../Generated_Code/IO1.c ****   /* Clear the transmit counters and pointer */
 115:../Generated_Code/IO1.c ****   DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
  61              		.loc 1 115 0
  62 001e FB68     		ldr	r3, [r7, #12]
  63 0020 0022     		mov	r2, #0
  64 0022 5A81     		strh	r2, [r3, #10]
 116:../Generated_Code/IO1.c ****   DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock(
  65              		.loc 1 116 0
  66 0024 FB68     		ldr	r3, [r7, #12]
  67 0026 0022     		mov	r2, #0
  68 0028 1A82     		strh	r2, [r3, #16]
 117:../Generated_Code/IO1.c ****   DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
  69              		.loc 1 117 0
  70 002a FB68     		ldr	r3, [r7, #12]
  71 002c 0022     		mov	r2, #0
  72 002e DA60     		str	r2, [r3, #12]
 118:../Generated_Code/IO1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  73              		.loc 1 118 0
  74 0030 FB68     		ldr	r3, [r7, #12]
  75 0032 7A68     		ldr	r2, [r7, #4]
  76 0034 5A61     		str	r2, [r3, #20]
 119:../Generated_Code/IO1.c ****   /* SIM_SCGC4: UART0=1 */
 120:../Generated_Code/IO1.c ****   SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;                                                   
  77              		.loc 1 120 0
  78 0036 414A     		ldr	r2, .L3+4
  79 0038 4049     		ldr	r1, .L3+4
  80 003a 414B     		ldr	r3, .L3+8
  81 003c CB58     		ldr	r3, [r1, r3]
  82 003e 8021     		mov	r1, #128
  83 0040 C900     		lsl	r1, r1, #3
  84 0042 1943     		orr	r1, r3
  85 0044 3E4B     		ldr	r3, .L3+8
  86 0046 D150     		str	r1, [r2, r3]
 121:../Generated_Code/IO1.c ****   /* PORTA_PCR1: ISF=0,MUX=2 */
 122:../Generated_Code/IO1.c ****   PORTA_PCR1 = (uint32_t)((PORTA_PCR1 & (uint32_t)~(uint32_t)(
  87              		.loc 1 122 0
  88 0048 3E4B     		ldr	r3, .L3+12
  89 004a 3E4A     		ldr	r2, .L3+12
  90 004c 5168     		ldr	r1, [r2, #4]
  91 004e 3E4A     		ldr	r2, .L3+16
  92 0050 0A40     		and	r2, r1
  93 0052 8021     		mov	r1, #128
  94 0054 8900     		lsl	r1, r1, #2
  95 0056 0A43     		orr	r2, r1
  96 0058 5A60     		str	r2, [r3, #4]
 123:../Generated_Code/IO1.c ****                 PORT_PCR_ISF_MASK |
 124:../Generated_Code/IO1.c ****                 PORT_PCR_MUX(0x05)
 125:../Generated_Code/IO1.c ****                )) | (uint32_t)(
 126:../Generated_Code/IO1.c ****                 PORT_PCR_MUX(0x02)
 127:../Generated_Code/IO1.c ****                ));                                                  
 128:../Generated_Code/IO1.c ****   /* PORTA_PCR2: ISF=0,MUX=2 */
 129:../Generated_Code/IO1.c ****   PORTA_PCR2 = (uint32_t)((PORTA_PCR2 & (uint32_t)~(uint32_t)(
  97              		.loc 1 129 0
  98 005a 3A4B     		ldr	r3, .L3+12
  99 005c 394A     		ldr	r2, .L3+12
 100 005e 9168     		ldr	r1, [r2, #8]
 101 0060 394A     		ldr	r2, .L3+16
 102 0062 0A40     		and	r2, r1
 103 0064 8021     		mov	r1, #128
 104 0066 8900     		lsl	r1, r1, #2
 105 0068 0A43     		orr	r2, r1
 106 006a 9A60     		str	r2, [r3, #8]
 130:../Generated_Code/IO1.c ****                 PORT_PCR_ISF_MASK |
 131:../Generated_Code/IO1.c ****                 PORT_PCR_MUX(0x05)
 132:../Generated_Code/IO1.c ****                )) | (uint32_t)(
 133:../Generated_Code/IO1.c ****                 PORT_PCR_MUX(0x02)
 134:../Generated_Code/IO1.c ****                ));                                                  
 135:../Generated_Code/IO1.c ****   UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_DISABLE); /* Disable transmitter. */
 107              		.loc 1 135 0
 108 006c 374B     		ldr	r3, .L3+20
 109 006e 374A     		ldr	r2, .L3+20
 110 0070 D278     		ldrb	r2, [r2, #3]
 111 0072 D2B2     		uxtb	r2, r2
 112 0074 0821     		mov	r1, #8
 113 0076 8A43     		bic	r2, r1
 114 0078 D2B2     		uxtb	r2, r2
 115 007a DA70     		strb	r2, [r3, #3]
 136:../Generated_Code/IO1.c ****   UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_DISABLE); /* Disable receiver. */
 116              		.loc 1 136 0
 117 007c 334B     		ldr	r3, .L3+20
 118 007e 334A     		ldr	r2, .L3+20
 119 0080 D278     		ldrb	r2, [r2, #3]
 120 0082 D2B2     		uxtb	r2, r2
 121 0084 0421     		mov	r1, #4
 122 0086 8A43     		bic	r2, r1
 123 0088 D2B2     		uxtb	r2, r2
 124 008a DA70     		strb	r2, [r3, #3]
 137:../Generated_Code/IO1.c ****   DeviceDataPrv->SerFlag = 0x00U;      /* Reset flags */
 125              		.loc 1 137 0
 126 008c FB68     		ldr	r3, [r7, #12]
 127 008e 0022     		mov	r2, #0
 128 0090 1A80     		strh	r2, [r3]
 138:../Generated_Code/IO1.c ****   /* UART0_C1: LOOPS=0,DOZEEN=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
 139:../Generated_Code/IO1.c ****   UART0_C1 = 0x00U;                    /*  Set the C1 register */
 129              		.loc 1 139 0
 130 0092 2E4B     		ldr	r3, .L3+20
 131 0094 0022     		mov	r2, #0
 132 0096 9A70     		strb	r2, [r3, #2]
 140:../Generated_Code/IO1.c ****   /* UART0_C3: R8T9=0,R9T8=0,TXDIR=0,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
 141:../Generated_Code/IO1.c ****   UART0_C3 = 0x00U;                    /*  Set the C3 register */
 133              		.loc 1 141 0
 134 0098 2C4B     		ldr	r3, .L3+20
 135 009a 0022     		mov	r2, #0
 136 009c 9A71     		strb	r2, [r3, #6]
 142:../Generated_Code/IO1.c ****   /* UART0_S2: LBKDIF=0,RXEDGIF=0,MSBF=0,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
 143:../Generated_Code/IO1.c ****   UART0_S2 = 0x00U;                    /*  Set the S2 register */
 137              		.loc 1 143 0
 138 009e 2B4B     		ldr	r3, .L3+20
 139 00a0 0022     		mov	r2, #0
 140 00a2 5A71     		strb	r2, [r3, #5]
 144:../Generated_Code/IO1.c ****   UART0_PDD_SetClockSource(UART0_BASE_PTR, UART0_PDD_PLL_FLL_CLOCK);
 141              		.loc 1 144 0
 142 00a4 254A     		ldr	r2, .L3+4
 143 00a6 2549     		ldr	r1, .L3+4
 144 00a8 294B     		ldr	r3, .L3+24
 145 00aa C958     		ldr	r1, [r1, r3]
 146 00ac 294B     		ldr	r3, .L3+28
 147 00ae 0B40     		and	r3, r1
 148 00b0 8021     		mov	r1, #128
 149 00b2 C904     		lsl	r1, r1, #19
 150 00b4 1943     		orr	r1, r3
 151 00b6 264B     		ldr	r3, .L3+24
 152 00b8 D150     		str	r1, [r2, r3]
 145:../Generated_Code/IO1.c ****   UART0_PDD_SetBaudRate(UART0_BASE_PTR, 104U); /* Set the baud rate register. */
 153              		.loc 1 145 0
 154 00ba 244B     		ldr	r3, .L3+20
 155 00bc 234A     		ldr	r2, .L3+20
 156 00be 1278     		ldrb	r2, [r2]
 157 00c0 D2B2     		uxtb	r2, r2
 158 00c2 1F21     		mov	r1, #31
 159 00c4 8A43     		bic	r2, r1
 160 00c6 D2B2     		uxtb	r2, r2
 161 00c8 1A70     		strb	r2, [r3]
 162 00ca 204B     		ldr	r3, .L3+20
 163 00cc 6822     		mov	r2, #104
 164 00ce 5A70     		strb	r2, [r3, #1]
 146:../Generated_Code/IO1.c ****   UART0_PDD_SetOversamplingRatio(UART0_BASE_PTR, 3U);
 165              		.loc 1 146 0
 166 00d0 1E4B     		ldr	r3, .L3+20
 167 00d2 1E4A     		ldr	r2, .L3+20
 168 00d4 927A     		ldrb	r2, [r2, #10]
 169 00d6 D2B2     		uxtb	r2, r2
 170 00d8 D2B2     		uxtb	r2, r2
 171 00da 1F21     		mov	r1, #31
 172 00dc 8A43     		bic	r2, r1
 173 00de D2B2     		uxtb	r2, r2
 174 00e0 0321     		mov	r1, #3
 175 00e2 0A43     		orr	r2, r1
 176 00e4 D2B2     		uxtb	r2, r2
 177 00e6 D2B2     		uxtb	r2, r2
 178 00e8 9A72     		strb	r2, [r3, #10]
 147:../Generated_Code/IO1.c ****   UART0_PDD_EnableSamplingOnBothEdges(UART0_BASE_PTR, PDD_ENABLE);
 179              		.loc 1 147 0
 180 00ea 184B     		ldr	r3, .L3+20
 181 00ec 174A     		ldr	r2, .L3+20
 182 00ee D27A     		ldrb	r2, [r2, #11]
 183 00f0 D2B2     		uxtb	r2, r2
 184 00f2 D2B2     		uxtb	r2, r2
 185 00f4 0221     		mov	r1, #2
 186 00f6 0A43     		orr	r2, r1
 187 00f8 D2B2     		uxtb	r2, r2
 188 00fa D2B2     		uxtb	r2, r2
 189 00fc DA72     		strb	r2, [r3, #11]
 148:../Generated_Code/IO1.c ****   UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_ENABLE); /* Enable transmitter */
 190              		.loc 1 148 0
 191 00fe 134B     		ldr	r3, .L3+20
 192 0100 124A     		ldr	r2, .L3+20
 193 0102 D278     		ldrb	r2, [r2, #3]
 194 0104 D2B2     		uxtb	r2, r2
 195 0106 D2B2     		uxtb	r2, r2
 196 0108 0821     		mov	r1, #8
 197 010a 0A43     		orr	r2, r1
 198 010c D2B2     		uxtb	r2, r2
 199 010e D2B2     		uxtb	r2, r2
 200 0110 DA70     		strb	r2, [r3, #3]
 149:../Generated_Code/IO1.c ****   UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_ENABLE); /* Enable receiver */
 201              		.loc 1 149 0
 202 0112 0E4B     		ldr	r3, .L3+20
 203 0114 0D4A     		ldr	r2, .L3+20
 204 0116 D278     		ldrb	r2, [r2, #3]
 205 0118 D2B2     		uxtb	r2, r2
 206 011a D2B2     		uxtb	r2, r2
 207 011c 0421     		mov	r1, #4
 208 011e 0A43     		orr	r2, r1
 209 0120 D2B2     		uxtb	r2, r2
 210 0122 D2B2     		uxtb	r2, r2
 211 0124 DA70     		strb	r2, [r3, #3]
 150:../Generated_Code/IO1.c ****   /* Registration of the device structure */
 151:../Generated_Code/IO1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_IO1_ID,DeviceDataPrv);
 212              		.loc 1 151 0
 213 0126 0C4B     		ldr	r3, .L3+32
 214 0128 FA68     		ldr	r2, [r7, #12]
 215 012a 5A60     		str	r2, [r3, #4]
 152:../Generated_Code/IO1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv);
 216              		.loc 1 152 0
 217 012c FB68     		ldr	r3, [r7, #12]
 153:../Generated_Code/IO1.c **** }
 218              		.loc 1 153 0
 219 012e 181C     		mov	r0, r3
 220 0130 BD46     		mov	sp, r7
 221 0132 04B0     		add	sp, sp, #16
 222              		@ sp needed for prologue
 223 0134 80BD     		pop	{r7, pc}
 224              	.L4:
 225 0136 C046     		.align	2
 226              	.L3:
 227 0138 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 228 013c 00700440 		.word	1074032640
 229 0140 34100000 		.word	4148
 230 0144 00900440 		.word	1074040832
 231 0148 FFF8FFFE 		.word	-16779009
 232 014c 00A00640 		.word	1074176000
 233 0150 04100000 		.word	4100
 234 0154 FFFFFFF3 		.word	-201326593
 235 0158 00000000 		.word	PE_LDD_DeviceDataList
 236              		.cfi_endproc
 237              	.LFE0:
 239              		.section	.text.InterruptRx,"ax",%progbits
 240              		.align	2
 241              		.code	16
 242              		.thumb_func
 244              	InterruptRx:
 245              	.LFB1:
 154:../Generated_Code/IO1.c **** 
 155:../Generated_Code/IO1.c **** /*
 156:../Generated_Code/IO1.c **** ** ===================================================================
 157:../Generated_Code/IO1.c **** **     Method      :  InterruptRx (component Serial_LDD)
 158:../Generated_Code/IO1.c **** **
 159:../Generated_Code/IO1.c **** **     Description :
 160:../Generated_Code/IO1.c **** **         The method services the receive interrupt of the selected 
 161:../Generated_Code/IO1.c **** **         peripheral(s) and eventually invokes the bean's event(s).
 162:../Generated_Code/IO1.c **** **         This method is internal. It is used by Processor Expert only.
 163:../Generated_Code/IO1.c **** ** ===================================================================
 164:../Generated_Code/IO1.c **** */
 165:../Generated_Code/IO1.c **** static void InterruptRx(IO1_TDeviceDataPtr DeviceDataPrv)
 166:../Generated_Code/IO1.c **** {
 246              		.loc 1 166 0
 247              		.cfi_startproc
 248 0000 90B5     		push	{r4, r7, lr}
 249              	.LCFI3:
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 83B0     		sub	sp, sp, #12
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 24
 257 0004 00AF     		add	r7, sp, #0
 258              	.LCFI5:
 259              		.cfi_def_cfa_register 7
 260 0006 7860     		str	r0, [r7, #4]
 167:../Generated_Code/IO1.c ****   register uint16_t Data;              /* Temporary variable for data */
 168:../Generated_Code/IO1.c **** 
 169:../Generated_Code/IO1.c ****   Data = (uint16_t)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Read an 8-bit character from the receiver
 261              		.loc 1 169 0
 262 0008 104B     		ldr	r3, .L7
 263 000a DB79     		ldrb	r3, [r3, #7]
 264 000c DBB2     		uxtb	r3, r3
 265 000e 1C1C     		mov	r4, r3
 170:../Generated_Code/IO1.c ****   if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
 266              		.loc 1 170 0
 267 0010 7B68     		ldr	r3, [r7, #4]
 268 0012 1B89     		ldrh	r3, [r3, #8]
 269 0014 002B     		cmp	r3, #0
 270 0016 15D0     		beq	.L5
 171:../Generated_Code/IO1.c ****     *(DeviceDataPrv->InpDataPtr++) = (uint8_t)Data; /* Put an 8-bit character to the receive buffer
 271              		.loc 1 171 0
 272 0018 7B68     		ldr	r3, [r7, #4]
 273 001a 5B68     		ldr	r3, [r3, #4]
 274 001c E2B2     		uxtb	r2, r4
 275 001e 1A70     		strb	r2, [r3]
 276 0020 5A1C     		add	r2, r3, #1
 277 0022 7B68     		ldr	r3, [r7, #4]
 278 0024 5A60     		str	r2, [r3, #4]
 172:../Generated_Code/IO1.c ****     DeviceDataPrv->InpRecvDataNum++;   /* Increment received char. counter */
 279              		.loc 1 172 0
 280 0026 7B68     		ldr	r3, [r7, #4]
 281 0028 5B88     		ldrh	r3, [r3, #2]
 282 002a 0133     		add	r3, r3, #1
 283 002c 9AB2     		uxth	r2, r3
 284 002e 7B68     		ldr	r3, [r7, #4]
 285 0030 5A80     		strh	r2, [r3, #2]
 173:../Generated_Code/IO1.c ****     if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number
 286              		.loc 1 173 0
 287 0032 7B68     		ldr	r3, [r7, #4]
 288 0034 5A88     		ldrh	r2, [r3, #2]
 289 0036 7B68     		ldr	r3, [r7, #4]
 290 0038 1B89     		ldrh	r3, [r3, #8]
 291 003a 9A42     		cmp	r2, r3
 292 003c 02D1     		bne	.L5
 174:../Generated_Code/IO1.c ****       DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to 
 293              		.loc 1 174 0
 294 003e 7B68     		ldr	r3, [r7, #4]
 295 0040 0022     		mov	r2, #0
 296 0042 1A81     		strh	r2, [r3, #8]
 297              	.L5:
 175:../Generated_Code/IO1.c ****     }
 176:../Generated_Code/IO1.c ****   }
 177:../Generated_Code/IO1.c **** }
 298              		.loc 1 177 0
 299 0044 BD46     		mov	sp, r7
 300 0046 03B0     		add	sp, sp, #12
 301              		@ sp needed for prologue
 302 0048 90BD     		pop	{r4, r7, pc}
 303              	.L8:
 304 004a C046     		.align	2
 305              	.L7:
 306 004c 00A00640 		.word	1074176000
 307              		.cfi_endproc
 308              	.LFE1:
 310              		.section	.text.InterruptTx,"ax",%progbits
 311              		.align	2
 312              		.code	16
 313              		.thumb_func
 315              	InterruptTx:
 316              	.LFB2:
 178:../Generated_Code/IO1.c **** 
 179:../Generated_Code/IO1.c **** /*
 180:../Generated_Code/IO1.c **** ** ===================================================================
 181:../Generated_Code/IO1.c **** **     Method      :  InterruptTx (component Serial_LDD)
 182:../Generated_Code/IO1.c **** **
 183:../Generated_Code/IO1.c **** **     Description :
 184:../Generated_Code/IO1.c **** **         The method services the receive interrupt of the selected 
 185:../Generated_Code/IO1.c **** **         peripheral(s) and eventually invokes the bean's event(s).
 186:../Generated_Code/IO1.c **** **         This method is internal. It is used by Processor Expert only.
 187:../Generated_Code/IO1.c **** ** ===================================================================
 188:../Generated_Code/IO1.c **** */
 189:../Generated_Code/IO1.c **** static void InterruptTx(IO1_TDeviceDataPtr DeviceDataPrv)
 190:../Generated_Code/IO1.c **** {
 317              		.loc 1 190 0
 318              		.cfi_startproc
 319 0000 80B5     		push	{r7, lr}
 320              	.LCFI6:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 7, -8
 323              		.cfi_offset 14, -4
 324 0002 82B0     		sub	sp, sp, #8
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              	.LCFI8:
 329              		.cfi_def_cfa_register 7
 330 0006 7860     		str	r0, [r7, #4]
 191:../Generated_Code/IO1.c **** 
 192:../Generated_Code/IO1.c ****   if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characte
 331              		.loc 1 192 0
 332 0008 7B68     		ldr	r3, [r7, #4]
 333 000a 5A89     		ldrh	r2, [r3, #10]
 334 000c 7B68     		ldr	r3, [r7, #4]
 335 000e 1B8A     		ldrh	r3, [r3, #16]
 336 0010 9A42     		cmp	r2, r3
 337 0012 17D2     		bcs	.L10
 193:../Generated_Code/IO1.c ****     UART0_PDD_PutChar8(UART0_BASE_PTR, *(DeviceDataPrv->OutDataPtr++)); /* Put a 8-bit character to
 338              		.loc 1 193 0
 339 0014 104A     		ldr	r2, .L12
 340 0016 7B68     		ldr	r3, [r7, #4]
 341 0018 DB68     		ldr	r3, [r3, #12]
 342 001a 1978     		ldrb	r1, [r3]
 343 001c D171     		strb	r1, [r2, #7]
 344 001e 5A1C     		add	r2, r3, #1
 345 0020 7B68     		ldr	r3, [r7, #4]
 346 0022 DA60     		str	r2, [r3, #12]
 194:../Generated_Code/IO1.c ****     DeviceDataPrv->OutSentDataNum++;   /* Increment the counter of sent characters. */
 347              		.loc 1 194 0
 348 0024 7B68     		ldr	r3, [r7, #4]
 349 0026 5B89     		ldrh	r3, [r3, #10]
 350 0028 0133     		add	r3, r3, #1
 351 002a 9AB2     		uxth	r2, r3
 352 002c 7B68     		ldr	r3, [r7, #4]
 353 002e 5A81     		strh	r2, [r3, #10]
 195:../Generated_Code/IO1.c ****     if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
 354              		.loc 1 195 0
 355 0030 7B68     		ldr	r3, [r7, #4]
 356 0032 5A89     		ldrh	r2, [r3, #10]
 357 0034 7B68     		ldr	r3, [r7, #4]
 358 0036 1B8A     		ldrh	r3, [r3, #16]
 359 0038 9A42     		cmp	r2, r3
 360 003a 0AD1     		bne	.L9
 196:../Generated_Code/IO1.c ****       DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBl
 361              		.loc 1 196 0
 362 003c 7B68     		ldr	r3, [r7, #4]
 363 003e 0022     		mov	r2, #0
 364 0040 1A82     		strh	r2, [r3, #16]
 365 0042 06E0     		b	.L9
 366              	.L10:
 197:../Generated_Code/IO1.c ****     }
 198:../Generated_Code/IO1.c ****   } else {
 199:../Generated_Code/IO1.c ****     DeviceDataPrv->SerFlag &= (uint16_t)(~(uint16_t)ENABLED_TX_INT); /* Clear the flag ENABLED_TX_I
 367              		.loc 1 199 0
 368 0044 7B68     		ldr	r3, [r7, #4]
 369 0046 1B88     		ldrh	r3, [r3]
 370 0048 0122     		mov	r2, #1
 371 004a 9343     		bic	r3, r2
 372 004c 9AB2     		uxth	r2, r3
 373 004e 7B68     		ldr	r3, [r7, #4]
 374 0050 1A80     		strh	r2, [r3]
 375              	.L9:
 200:../Generated_Code/IO1.c ****   }
 201:../Generated_Code/IO1.c **** }
 376              		.loc 1 201 0
 377 0052 BD46     		mov	sp, r7
 378 0054 02B0     		add	sp, sp, #8
 379              		@ sp needed for prologue
 380 0056 80BD     		pop	{r7, pc}
 381              	.L13:
 382              		.align	2
 383              	.L12:
 384 0058 00A00640 		.word	1074176000
 385              		.cfi_endproc
 386              	.LFE2:
 388              		.section	.text.IO1_Main,"ax",%progbits
 389              		.align	2
 390              		.global	IO1_Main
 391              		.code	16
 392              		.thumb_func
 394              	IO1_Main:
 395              	.LFB3:
 202:../Generated_Code/IO1.c **** 
 203:../Generated_Code/IO1.c **** /*
 204:../Generated_Code/IO1.c **** ** ===================================================================
 205:../Generated_Code/IO1.c **** **     Method      :  IO1_Main (component Serial_LDD)
 206:../Generated_Code/IO1.c **** **
 207:../Generated_Code/IO1.c **** **     Description :
 208:../Generated_Code/IO1.c **** **         This method is available only in the polling mode (Interrupt
 209:../Generated_Code/IO1.c **** **         service/event = 'no'). If interrupt service is disabled this
 210:../Generated_Code/IO1.c **** **         method replaces the interrupt handler. This method should be
 211:../Generated_Code/IO1.c **** **         called if Receive/SendBlock was invoked before in order to
 212:../Generated_Code/IO1.c **** **         run the reception/transmission. The end of the
 213:../Generated_Code/IO1.c **** **         receiving/transmitting is indicated by OnBlockSent or
 214:../Generated_Code/IO1.c **** **         OnBlockReceived event. 
 215:../Generated_Code/IO1.c **** **     Parameters  :
 216:../Generated_Code/IO1.c **** **         NAME            - DESCRIPTION
 217:../Generated_Code/IO1.c **** **       * DeviceDataPtr   - Device data structure
 218:../Generated_Code/IO1.c **** **                           pointer returned by <Init> method.
 219:../Generated_Code/IO1.c **** **     Returns     : Nothing
 220:../Generated_Code/IO1.c **** ** ===================================================================
 221:../Generated_Code/IO1.c **** */
 222:../Generated_Code/IO1.c **** void IO1_Main(LDD_TDeviceData *DeviceDataPtr)
 223:../Generated_Code/IO1.c **** {
 396              		.loc 1 223 0
 397              		.cfi_startproc
 398 0000 90B5     		push	{r4, r7, lr}
 399              	.LCFI9:
 400              		.cfi_def_cfa_offset 12
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 85B0     		sub	sp, sp, #20
 405              	.LCFI10:
 406              		.cfi_def_cfa_offset 32
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI11:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 224:../Generated_Code/IO1.c ****   IO1_TDeviceDataPtr DeviceDataPrv = (IO1_TDeviceDataPtr)DeviceDataPtr;
 411              		.loc 1 224 0
 412 0008 7B68     		ldr	r3, [r7, #4]
 413 000a FB60     		str	r3, [r7, #12]
 225:../Generated_Code/IO1.c ****   register uint16_t StatReg = UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR); /* Read status regi
 414              		.loc 1 225 0
 415 000c 154B     		ldr	r3, .L18
 416 000e 1B79     		ldrb	r3, [r3, #4]
 417 0010 DBB2     		uxtb	r3, r3
 418 0012 1C1C     		mov	r4, r3
 226:../Generated_Code/IO1.c **** 
 227:../Generated_Code/IO1.c ****   if (StatReg & (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK)) { /* I
 419              		.loc 1 227 0
 420 0014 221C     		mov	r2, r4
 421 0016 0F23     		mov	r3, #15
 422 0018 1340     		and	r3, r2
 423 001a 09D0     		beq	.L15
 228:../Generated_Code/IO1.c ****     UART0_PDD_ClearInterruptFlags(UART0_BASE_PTR, (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_F
 424              		.loc 1 228 0
 425 001c 114B     		ldr	r3, .L18
 426 001e 0F22     		mov	r2, #15
 427 0020 1A71     		strb	r2, [r3, #4]
 229:../Generated_Code/IO1.c ****     (void)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Dummy read 8-bit character from receiver */
 428              		.loc 1 229 0
 429 0022 104B     		ldr	r3, .L18
 430 0024 DB79     		ldrb	r3, [r3, #7]
 230:../Generated_Code/IO1.c ****     StatReg &= (uint16_t)(~(uint16_t)UART0_S1_RDRF_MASK); /* Clear the receive data flag to discard
 431              		.loc 1 230 0
 432 0026 2023     		mov	r3, #32
 433 0028 221C     		mov	r2, r4
 434 002a 9A43     		bic	r2, r3
 435 002c 131C     		mov	r3, r2
 436 002e 9CB2     		uxth	r4, r3
 437              	.L15:
 231:../Generated_Code/IO1.c ****   }
 232:../Generated_Code/IO1.c ****   if (StatReg & UART0_S1_RDRF_MASK) {  /* Is the receiver's interrupt flag set? */
 438              		.loc 1 232 0
 439 0030 221C     		mov	r2, r4
 440 0032 2023     		mov	r3, #32
 441 0034 1340     		and	r3, r2
 442 0036 03D0     		beq	.L16
 233:../Generated_Code/IO1.c ****     InterruptRx(DeviceDataPrv);        /* If yes, then invoke the internal service routine. This ro
 443              		.loc 1 233 0
 444 0038 FB68     		ldr	r3, [r7, #12]
 445 003a 181C     		mov	r0, r3
 446 003c FFF7FEFF 		bl	InterruptRx
 447              	.L16:
 234:../Generated_Code/IO1.c ****   }
 235:../Generated_Code/IO1.c ****   if (DeviceDataPrv->SerFlag & ENABLED_TX_INT) { /* Is the transmitter interrupt enabled? */
 448              		.loc 1 235 0
 449 0040 FB68     		ldr	r3, [r7, #12]
 450 0042 1B88     		ldrh	r3, [r3]
 451 0044 1A1C     		mov	r2, r3
 452 0046 0123     		mov	r3, #1
 453 0048 1340     		and	r3, r2
 454 004a 07D0     		beq	.L14
 236:../Generated_Code/IO1.c ****     if (StatReg & UART0_S1_TDRE_MASK) { /* Is the transmitter empty? */
 455              		.loc 1 236 0
 456 004c 221C     		mov	r2, r4
 457 004e 8023     		mov	r3, #128
 458 0050 1340     		and	r3, r2
 459 0052 03D0     		beq	.L14
 237:../Generated_Code/IO1.c ****       InterruptTx(DeviceDataPrv);      /* If yes, then invoke the internal service routine. This ro
 460              		.loc 1 237 0
 461 0054 FB68     		ldr	r3, [r7, #12]
 462 0056 181C     		mov	r0, r3
 463 0058 FFF7FEFF 		bl	InterruptTx
 464              	.L14:
 238:../Generated_Code/IO1.c ****     }
 239:../Generated_Code/IO1.c ****   }
 240:../Generated_Code/IO1.c **** }
 465              		.loc 1 240 0
 466 005c BD46     		mov	sp, r7
 467 005e 05B0     		add	sp, sp, #20
 468              		@ sp needed for prologue
 469 0060 90BD     		pop	{r4, r7, pc}
 470              	.L19:
 471 0062 C046     		.align	2
 472              	.L18:
 473 0064 00A00640 		.word	1074176000
 474              		.cfi_endproc
 475              	.LFE3:
 477              		.text
 478              	.Letext0:
 479              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 480              		.file 3 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/psp/cortex_m/psptypes.h"
 481              		.file 4 "E:/CW103_Work_Space/Mqx_Lite_Test/Generated_Code/IO_Map.h"
 482              		.file 5 "../Generated_Code/PE_LDD.h"
 483              		.file 6 "../Generated_Code/IO1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 IO1.c
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:24     .text.IO1_Init:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:29     .text.IO1_Init:00000000 IO1_Init
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:227    .text.IO1_Init:00000138 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:240    .text.InterruptRx:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:244    .text.InterruptRx:00000000 InterruptRx
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:306    .text.InterruptRx:0000004c $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:311    .text.InterruptTx:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:315    .text.InterruptTx:00000000 InterruptTx
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:384    .text.InterruptTx:00000058 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:389    .text.IO1_Main:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:394    .text.IO1_Main:00000000 IO1_Main
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\cc2hCF3T.s:473    .text.IO1_Main:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
