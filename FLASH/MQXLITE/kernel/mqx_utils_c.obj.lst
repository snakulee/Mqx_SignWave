   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"mqx_utils.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._mqx_get_kernel_data,"ax",%progbits
  18              		.align	2
  19              		.global	_mqx_get_kernel_data
  20              		.code	16
  21              		.thumb_func
  23              	_mqx_get_kernel_data:
  24              	.LFB0:
  25              		.file 1 "../MQXLITE/kernel/mqx_utils.c"
   1:../MQXLITE/kernel/mqx_utils.c **** /*HEADER**********************************************************************
   2:../MQXLITE/kernel/mqx_utils.c **** *
   3:../MQXLITE/kernel/mqx_utils.c **** * Copyright (c) 2008-2010 Freescale Semiconductor;
   4:../MQXLITE/kernel/mqx_utils.c **** * All Rights Reserved
   5:../MQXLITE/kernel/mqx_utils.c **** *
   6:../MQXLITE/kernel/mqx_utils.c **** * Copyright (c) 2004-2008 Embedded Access Inc.;
   7:../MQXLITE/kernel/mqx_utils.c **** * All Rights Reserved
   8:../MQXLITE/kernel/mqx_utils.c **** *
   9:../MQXLITE/kernel/mqx_utils.c **** * Copyright (c) 1989-2008 ARC International;
  10:../MQXLITE/kernel/mqx_utils.c **** * All Rights Reserved
  11:../MQXLITE/kernel/mqx_utils.c **** *
  12:../MQXLITE/kernel/mqx_utils.c **** ******************************************************************************
  13:../MQXLITE/kernel/mqx_utils.c **** *
  14:../MQXLITE/kernel/mqx_utils.c **** * THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY EXPRESSED OR
  15:../MQXLITE/kernel/mqx_utils.c **** * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  16:../MQXLITE/kernel/mqx_utils.c **** * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  17:../MQXLITE/kernel/mqx_utils.c **** * IN NO EVENT SHALL FREESCALE OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  18:../MQXLITE/kernel/mqx_utils.c **** * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  19:../MQXLITE/kernel/mqx_utils.c **** * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  20:../MQXLITE/kernel/mqx_utils.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  21:../MQXLITE/kernel/mqx_utils.c **** * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  22:../MQXLITE/kernel/mqx_utils.c **** * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  23:../MQXLITE/kernel/mqx_utils.c **** * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  24:../MQXLITE/kernel/mqx_utils.c **** * THE POSSIBILITY OF SUCH DAMAGE.
  25:../MQXLITE/kernel/mqx_utils.c **** *
  26:../MQXLITE/kernel/mqx_utils.c **** ******************************************************************************
  27:../MQXLITE/kernel/mqx_utils.c **** *
  28:../MQXLITE/kernel/mqx_utils.c **** * $FileName: mqx.c$
  29:../MQXLITE/kernel/mqx_utils.c **** * $Version : 3.8.31.3$
  30:../MQXLITE/kernel/mqx_utils.c **** * $Date    : Feb-24-2012$
  31:../MQXLITE/kernel/mqx_utils.c **** *
  32:../MQXLITE/kernel/mqx_utils.c **** * Comments:
  33:../MQXLITE/kernel/mqx_utils.c **** *
  34:../MQXLITE/kernel/mqx_utils.c **** *   This file contains the source for the main MQX function _mqx().
  35:../MQXLITE/kernel/mqx_utils.c **** *
  36:../MQXLITE/kernel/mqx_utils.c **** *END*************************************************************************/
  37:../MQXLITE/kernel/mqx_utils.c **** 
  38:../MQXLITE/kernel/mqx_utils.c **** #ifndef __NO_SETJMP
  39:../MQXLITE/kernel/mqx_utils.c **** #include <setjmp.h>
  40:../MQXLITE/kernel/mqx_utils.c **** #endif
  41:../MQXLITE/kernel/mqx_utils.c **** 
  42:../MQXLITE/kernel/mqx_utils.c **** #include "mqx_inc.h"
  43:../MQXLITE/kernel/mqx_utils.c **** 
  44:../MQXLITE/kernel/mqx_utils.c **** /*!
  45:../MQXLITE/kernel/mqx_utils.c ****  * \brief Gets a pointer to kernel data.
  46:../MQXLITE/kernel/mqx_utils.c ****  *
  47:../MQXLITE/kernel/mqx_utils.c ****  * The address of kernel data corresponds to START_OF_KERNEL_MEMORY in the MQX
  48:../MQXLITE/kernel/mqx_utils.c ****  * initialization structure that the application used to start MQX on the processor.
  49:../MQXLITE/kernel/mqx_utils.c ****  *
  50:../MQXLITE/kernel/mqx_utils.c ****  * \return Pointer to kernel data.
  51:../MQXLITE/kernel/mqx_utils.c ****  *
  52:../MQXLITE/kernel/mqx_utils.c ****  * \see MQX_INITIALIZATION_STRUCT
  53:../MQXLITE/kernel/mqx_utils.c ****  */
  54:../MQXLITE/kernel/mqx_utils.c **** pointer _mqx_get_kernel_data
  55:../MQXLITE/kernel/mqx_utils.c **** (
  56:../MQXLITE/kernel/mqx_utils.c ****     void
  57:../MQXLITE/kernel/mqx_utils.c **** )
  58:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
  26              		.loc 1 58 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  59:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
  60:../MQXLITE/kernel/mqx_utils.c **** 
  61:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
  39              		.loc 1 61 0
  40 0006 044B     		ldr	r3, .L3
  41 0008 1B68     		ldr	r3, [r3]
  42 000a 7B60     		str	r3, [r7, #4]
  62:../MQXLITE/kernel/mqx_utils.c **** 
  63:../MQXLITE/kernel/mqx_utils.c ****     return (pointer) kernel_data;
  43              		.loc 1 63 0
  44 000c 7B68     		ldr	r3, [r7, #4]
  64:../MQXLITE/kernel/mqx_utils.c **** 
  65:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
  45              		.loc 1 65 0
  46 000e 181C     		mov	r0, r3
  47 0010 BD46     		mov	sp, r7
  48 0012 02B0     		add	sp, sp, #8
  49              		@ sp needed for prologue
  50 0014 80BD     		pop	{r7, pc}
  51              	.L4:
  52 0016 C046     		.align	2
  53              	.L3:
  54 0018 00000000 		.word	_mqx_kernel_data
  55              		.cfi_endproc
  56              	.LFE0:
  58              		.section	.text._mqx_fatal_error,"ax",%progbits
  59              		.align	2
  60              		.global	_mqx_fatal_error
  61              		.code	16
  62              		.thumb_func
  64              	_mqx_fatal_error:
  65              	.LFB1:
  66:../MQXLITE/kernel/mqx_utils.c **** 
  67:../MQXLITE/kernel/mqx_utils.c **** /*!
  68:../MQXLITE/kernel/mqx_utils.c ****  * \brief Indicates that an error occurred that is so severe that MQX or the
  69:../MQXLITE/kernel/mqx_utils.c ****  * application can no longer function.
  70:../MQXLITE/kernel/mqx_utils.c ****  *
  71:../MQXLITE/kernel/mqx_utils.c ****  * The function logs an error in kernel log (if it has been created and configured
  72:../MQXLITE/kernel/mqx_utils.c ****  * to log errors) and calls _mqx_exit().
  73:../MQXLITE/kernel/mqx_utils.c ****  * \n MQX calls _mqx_fatal_error() if it detects an unhandled interrupt while it
  74:../MQXLITE/kernel/mqx_utils.c ****  * is in _int_exception_isr().
  75:../MQXLITE/kernel/mqx_utils.c ****  * \n If an application calls _mqx_fatal_error() when it detects a serious error,
  76:../MQXLITE/kernel/mqx_utils.c ****  * you can use this to help you debug by setting a breakpoint in the function.
  77:../MQXLITE/kernel/mqx_utils.c ****  *
  78:../MQXLITE/kernel/mqx_utils.c ****  * \param[in] error Error code.
  79:../MQXLITE/kernel/mqx_utils.c ****  *
  80:../MQXLITE/kernel/mqx_utils.c ****  * \warning Terminates the application by calling _mqx_exit().
  81:../MQXLITE/kernel/mqx_utils.c ****  *
  82:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_exit
  83:../MQXLITE/kernel/mqx_utils.c ****  * \see _int_exception_isr
  84:../MQXLITE/kernel/mqx_utils.c ****  */
  85:../MQXLITE/kernel/mqx_utils.c **** void _mqx_fatal_error
  86:../MQXLITE/kernel/mqx_utils.c **** (
  87:../MQXLITE/kernel/mqx_utils.c ****     _mqx_uint error
  88:../MQXLITE/kernel/mqx_utils.c **** )
  89:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
  66              		.loc 1 89 0
  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 82B0     		sub	sp, sp, #8
  74              	.LCFI4:
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              	.LCFI5:
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]
  90:../MQXLITE/kernel/mqx_utils.c ****     _KLOGM(KERNEL_DATA_STRUCT_PTR kernel_data;)
  91:../MQXLITE/kernel/mqx_utils.c **** 
  92:../MQXLITE/kernel/mqx_utils.c ****     _KLOGM(_GET_KERNEL_DATA(kernel_data);)
  93:../MQXLITE/kernel/mqx_utils.c ****     _KLOGE2(KLOG_mqx_fatal_error, error);
  94:../MQXLITE/kernel/mqx_utils.c ****     _mqx_exit(error);
  80              		.loc 1 94 0
  81 0008 7B68     		ldr	r3, [r7, #4]
  82 000a 181C     		mov	r0, r3
  83 000c FFF7FEFF 		bl	_mqx_exit
  95:../MQXLITE/kernel/mqx_utils.c ****     _KLOGX1( KLOG_mqx_fatal_error);
  96:../MQXLITE/kernel/mqx_utils.c **** 
  97:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
  84              		.loc 1 97 0
  85 0010 BD46     		mov	sp, r7
  86 0012 02B0     		add	sp, sp, #8
  87              		@ sp needed for prologue
  88 0014 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE1:
  92 0016 C046     		.section	.text._mqx_get_cpu_type,"ax",%progbits
  93              		.align	2
  94              		.global	_mqx_get_cpu_type
  95              		.code	16
  96              		.thumb_func
  98              	_mqx_get_cpu_type:
  99              	.LFB2:
  98:../MQXLITE/kernel/mqx_utils.c **** 
  99:../MQXLITE/kernel/mqx_utils.c **** #if MQX_KD_HAS_COUNTER
 100:../MQXLITE/kernel/mqx_utils.c **** /*!
 101:../MQXLITE/kernel/mqx_utils.c ****  * \brief Gets a unique number.
 102:../MQXLITE/kernel/mqx_utils.c ****  *
 103:../MQXLITE/kernel/mqx_utils.c ****  * This function increments the counter and then returns value of the counter.
 104:../MQXLITE/kernel/mqx_utils.c ****  * \n This provides a unique number for whoever requires it.
 105:../MQXLITE/kernel/mqx_utils.c ****  *
 106:../MQXLITE/kernel/mqx_utils.c ****  * \note The unique number will never be 0.
 107:../MQXLITE/kernel/mqx_utils.c ****  *
 108:../MQXLITE/kernel/mqx_utils.c ****  * \return 16-bit number for 16-bit processors or a 32-bit number for 32-bit
 109:../MQXLITE/kernel/mqx_utils.c ****  * processors (unique for the processor and never 0).
 110:../MQXLITE/kernel/mqx_utils.c ****  */
 111:../MQXLITE/kernel/mqx_utils.c **** _mqx_uint _mqx_get_counter
 112:../MQXLITE/kernel/mqx_utils.c **** (
 113:../MQXLITE/kernel/mqx_utils.c ****     void
 114:../MQXLITE/kernel/mqx_utils.c **** )
 115:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 116:../MQXLITE/kernel/mqx_utils.c ****     register KERNEL_DATA_STRUCT_PTR kernel_data;
 117:../MQXLITE/kernel/mqx_utils.c ****     _mqx_uint return_value;
 118:../MQXLITE/kernel/mqx_utils.c **** 
 119:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 120:../MQXLITE/kernel/mqx_utils.c ****     _INT_DISABLE();
 121:../MQXLITE/kernel/mqx_utils.c **** 
 122:../MQXLITE/kernel/mqx_utils.c ****     /*
 123:../MQXLITE/kernel/mqx_utils.c ****      * Increment counter, and ensure it is not zero.
 124:../MQXLITE/kernel/mqx_utils.c ****      * If it is zero, set it to one.
 125:../MQXLITE/kernel/mqx_utils.c ****      */
 126:../MQXLITE/kernel/mqx_utils.c ****     if ( ++kernel_data->COUNTER == 0 ) {
 127:../MQXLITE/kernel/mqx_utils.c ****         kernel_data->COUNTER = 1;
 128:../MQXLITE/kernel/mqx_utils.c ****     } /* Endif */
 129:../MQXLITE/kernel/mqx_utils.c ****     return_value = kernel_data->COUNTER;
 130:../MQXLITE/kernel/mqx_utils.c ****     _INT_ENABLE();
 131:../MQXLITE/kernel/mqx_utils.c ****     return (return_value);
 132:../MQXLITE/kernel/mqx_utils.c **** 
 133:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 134:../MQXLITE/kernel/mqx_utils.c **** #endif /* MQX_KD_HAS_COUNTER */
 135:../MQXLITE/kernel/mqx_utils.c **** 
 136:../MQXLITE/kernel/mqx_utils.c **** /*!
 137:../MQXLITE/kernel/mqx_utils.c ****  * \brief Gets the CPU type.
 138:../MQXLITE/kernel/mqx_utils.c ****  *
 139:../MQXLITE/kernel/mqx_utils.c ****  * CPU types begin with PSP_CPU_TYPE_ and are defined in
 140:../MQXLITE/kernel/mqx_utils.c ****  * "source\psp\<cpu_family>\<cpu_family.h>".
 141:../MQXLITE/kernel/mqx_utils.c ****  *
 142:../MQXLITE/kernel/mqx_utils.c ****  * \return CPU_TYPE field of kernel data.
 143:../MQXLITE/kernel/mqx_utils.c ****  *
 144:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_set_cpu_type
 145:../MQXLITE/kernel/mqx_utils.c ****  */
 146:../MQXLITE/kernel/mqx_utils.c **** _mqx_uint _mqx_get_cpu_type
 147:../MQXLITE/kernel/mqx_utils.c **** (
 148:../MQXLITE/kernel/mqx_utils.c ****     void
 149:../MQXLITE/kernel/mqx_utils.c **** )
 150:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 100              		.loc 1 150 0
 101              		.cfi_startproc
 102 0000 80B5     		push	{r7, lr}
 103              	.LCFI6:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 82B0     		sub	sp, sp, #8
 108              	.LCFI7:
 109              		.cfi_def_cfa_offset 16
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI8:
 112              		.cfi_def_cfa_register 7
 151:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 152:../MQXLITE/kernel/mqx_utils.c **** 
 153:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 113              		.loc 1 153 0
 114 0006 044B     		ldr	r3, .L8
 115 0008 1B68     		ldr	r3, [r3]
 116 000a 7B60     		str	r3, [r7, #4]
 154:../MQXLITE/kernel/mqx_utils.c ****     return kernel_data->CPU_TYPE;
 117              		.loc 1 154 0
 118 000c 7B68     		ldr	r3, [r7, #4]
 119 000e 1B89     		ldrh	r3, [r3, #8]
 155:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 120              		.loc 1 155 0
 121 0010 181C     		mov	r0, r3
 122 0012 BD46     		mov	sp, r7
 123 0014 02B0     		add	sp, sp, #8
 124              		@ sp needed for prologue
 125 0016 80BD     		pop	{r7, pc}
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 0018 00000000 		.word	_mqx_kernel_data
 130              		.cfi_endproc
 131              	.LFE2:
 133              		.section	.text._mqx_set_cpu_type,"ax",%progbits
 134              		.align	2
 135              		.global	_mqx_set_cpu_type
 136              		.code	16
 137              		.thumb_func
 139              	_mqx_set_cpu_type:
 140              	.LFB3:
 156:../MQXLITE/kernel/mqx_utils.c **** 
 157:../MQXLITE/kernel/mqx_utils.c **** /*!
 158:../MQXLITE/kernel/mqx_utils.c ****  * \brief Sets the CPU type.
 159:../MQXLITE/kernel/mqx_utils.c ****  *
 160:../MQXLITE/kernel/mqx_utils.c ****  * The function sets CPU_TYPE in kernel data. The MQX Host Tools family of products
 161:../MQXLITE/kernel/mqx_utils.c ****  * uses CPU type. CPU types begin with PSP_CPU_TYPE_ and are defined in
 162:../MQXLITE/kernel/mqx_utils.c ****  * source\psp\cpu_family\cpu_family.h.
 163:../MQXLITE/kernel/mqx_utils.c ****  *
 164:../MQXLITE/kernel/mqx_utils.c ****  * \param[in] cpu_type The value representing the kernel CPU type.
 165:../MQXLITE/kernel/mqx_utils.c ****  *
 166:../MQXLITE/kernel/mqx_utils.c ****  * \warning Does not verify that cpu_type is valid.
 167:../MQXLITE/kernel/mqx_utils.c ****  *
 168:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_get_cpu_type
 169:../MQXLITE/kernel/mqx_utils.c ****  */
 170:../MQXLITE/kernel/mqx_utils.c **** void _mqx_set_cpu_type
 171:../MQXLITE/kernel/mqx_utils.c **** (
 172:../MQXLITE/kernel/mqx_utils.c ****     _mqx_uint cpu_type
 173:../MQXLITE/kernel/mqx_utils.c **** )
 174:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 141              		.loc 1 174 0
 142              		.cfi_startproc
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI9:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 84B0     		sub	sp, sp, #16
 149              	.LCFI10:
 150              		.cfi_def_cfa_offset 24
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI11:
 153              		.cfi_def_cfa_register 7
 154 0006 7860     		str	r0, [r7, #4]
 175:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 176:../MQXLITE/kernel/mqx_utils.c **** 
 177:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 155              		.loc 1 177 0
 156 0008 044B     		ldr	r3, .L11
 157 000a 1B68     		ldr	r3, [r3]
 158 000c FB60     		str	r3, [r7, #12]
 178:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->CPU_TYPE = cpu_type;
 159              		.loc 1 178 0
 160 000e 7B68     		ldr	r3, [r7, #4]
 161 0010 9AB2     		uxth	r2, r3
 162 0012 FB68     		ldr	r3, [r7, #12]
 163 0014 1A81     		strh	r2, [r3, #8]
 179:../MQXLITE/kernel/mqx_utils.c **** 
 180:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 164              		.loc 1 180 0
 165 0016 BD46     		mov	sp, r7
 166 0018 04B0     		add	sp, sp, #16
 167              		@ sp needed for prologue
 168 001a 80BD     		pop	{r7, pc}
 169              	.L12:
 170              		.align	2
 171              	.L11:
 172 001c 00000000 		.word	_mqx_kernel_data
 173              		.cfi_endproc
 174              	.LFE3:
 176              		.section	.text._mqx_get_initialization,"ax",%progbits
 177              		.align	2
 178              		.global	_mqx_get_initialization
 179              		.code	16
 180              		.thumb_func
 182              	_mqx_get_initialization:
 183              	.LFB4:
 181:../MQXLITE/kernel/mqx_utils.c **** 
 182:../MQXLITE/kernel/mqx_utils.c **** /*!
 183:../MQXLITE/kernel/mqx_utils.c ****  * \brief Gets a pointer to the MQX initialization structure for this processor.
 184:../MQXLITE/kernel/mqx_utils.c ****  *
 185:../MQXLITE/kernel/mqx_utils.c ****  * \return Pointer to the MQX initialization structure in kernel data.
 186:../MQXLITE/kernel/mqx_utils.c ****  *
 187:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqxlite_init
 188:../MQXLITE/kernel/mqx_utils.c ****  * \see MQX_INITIALIZATION_STRUCT
 189:../MQXLITE/kernel/mqx_utils.c ****  */
 190:../MQXLITE/kernel/mqx_utils.c **** MQX_INITIALIZATION_STRUCT_PTR _mqx_get_initialization
 191:../MQXLITE/kernel/mqx_utils.c **** (
 192:../MQXLITE/kernel/mqx_utils.c ****     void
 193:../MQXLITE/kernel/mqx_utils.c **** )
 194:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 184              		.loc 1 194 0
 185              		.cfi_startproc
 186 0000 80B5     		push	{r7, lr}
 187              	.LCFI12:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 82B0     		sub	sp, sp, #8
 192              	.LCFI13:
 193              		.cfi_def_cfa_offset 16
 194 0004 00AF     		add	r7, sp, #0
 195              	.LCFI14:
 196              		.cfi_def_cfa_register 7
 195:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 196:../MQXLITE/kernel/mqx_utils.c **** 
 197:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 197              		.loc 1 197 0
 198 0006 054B     		ldr	r3, .L15
 199 0008 1B68     		ldr	r3, [r3]
 200 000a 7B60     		str	r3, [r7, #4]
 198:../MQXLITE/kernel/mqx_utils.c **** 
 199:../MQXLITE/kernel/mqx_utils.c ****     return ((MQX_INITIALIZATION_STRUCT_PTR) & kernel_data->INIT);
 201              		.loc 1 199 0
 202 000c 7B68     		ldr	r3, [r7, #4]
 203 000e 5133     		add	r3, r3, #81
 204 0010 FF33     		add	r3, r3, #255
 200:../MQXLITE/kernel/mqx_utils.c **** 
 201:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 205              		.loc 1 201 0
 206 0012 181C     		mov	r0, r3
 207 0014 BD46     		mov	sp, r7
 208 0016 02B0     		add	sp, sp, #8
 209              		@ sp needed for prologue
 210 0018 80BD     		pop	{r7, pc}
 211              	.L16:
 212 001a C046     		.align	2
 213              	.L15:
 214 001c 00000000 		.word	_mqx_kernel_data
 215              		.cfi_endproc
 216              	.LFE4:
 218              		.section	.text._mqx_get_exit_handler,"ax",%progbits
 219              		.align	2
 220              		.global	_mqx_get_exit_handler
 221              		.code	16
 222              		.thumb_func
 224              	_mqx_get_exit_handler:
 225              	.LFB5:
 202:../MQXLITE/kernel/mqx_utils.c **** 
 203:../MQXLITE/kernel/mqx_utils.c **** /*!
 204:../MQXLITE/kernel/mqx_utils.c ****  * \brief Gets a pointer to the MQX exit handler function called when MQX exits.
 205:../MQXLITE/kernel/mqx_utils.c ****  *
 206:../MQXLITE/kernel/mqx_utils.c ****  * \return Pointer to the MQX exit handler.
 207:../MQXLITE/kernel/mqx_utils.c ****  *
 208:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_exit
 209:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_set_exit_handler
 210:../MQXLITE/kernel/mqx_utils.c ****  */
 211:../MQXLITE/kernel/mqx_utils.c **** MQX_EXIT_FPTR _mqx_get_exit_handler (void)
 212:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 226              		.loc 1 212 0
 227              		.cfi_startproc
 228 0000 80B5     		push	{r7, lr}
 229              	.LCFI15:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              	.LCFI16:
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              	.LCFI17:
 238              		.cfi_def_cfa_register 7
 213:../MQXLITE/kernel/mqx_utils.c **** #if MQX_EXIT_ENABLED
 214:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 215:../MQXLITE/kernel/mqx_utils.c **** 
 216:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 239              		.loc 1 216 0
 240 0006 054B     		ldr	r3, .L19
 241 0008 1B68     		ldr	r3, [r3]
 242 000a 7B60     		str	r3, [r7, #4]
 217:../MQXLITE/kernel/mqx_utils.c ****     return (kernel_data->EXIT_HANDLER);
 243              		.loc 1 217 0
 244 000c 7A68     		ldr	r2, [r7, #4]
 245 000e 8B23     		mov	r3, #139
 246 0010 9B00     		lsl	r3, r3, #2
 247 0012 D358     		ldr	r3, [r2, r3]
 218:../MQXLITE/kernel/mqx_utils.c **** 
 219:../MQXLITE/kernel/mqx_utils.c **** #else
 220:../MQXLITE/kernel/mqx_utils.c ****     return NULL;
 221:../MQXLITE/kernel/mqx_utils.c **** #endif /* MQX_EXIT_ENABLED */
 222:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 248              		.loc 1 222 0
 249 0014 181C     		mov	r0, r3
 250 0016 BD46     		mov	sp, r7
 251 0018 02B0     		add	sp, sp, #8
 252              		@ sp needed for prologue
 253 001a 80BD     		pop	{r7, pc}
 254              	.L20:
 255              		.align	2
 256              	.L19:
 257 001c 00000000 		.word	_mqx_kernel_data
 258              		.cfi_endproc
 259              	.LFE5:
 261              		.section	.text._mqx_set_exit_handler,"ax",%progbits
 262              		.align	2
 263              		.global	_mqx_set_exit_handler
 264              		.code	16
 265              		.thumb_func
 267              	_mqx_set_exit_handler:
 268              	.LFB6:
 223:../MQXLITE/kernel/mqx_utils.c **** 
 224:../MQXLITE/kernel/mqx_utils.c **** /*!
 225:../MQXLITE/kernel/mqx_utils.c ****  * \brief Sets a pointer to the MQX exit handler function called when MQX exits.
 226:../MQXLITE/kernel/mqx_utils.c ****  *
 227:../MQXLITE/kernel/mqx_utils.c ****  * \param[in] entry Pointer to the exit handler.
 228:../MQXLITE/kernel/mqx_utils.c ****  *
 229:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_exit
 230:../MQXLITE/kernel/mqx_utils.c ****  * \see _mqx_get_exit_handler
 231:../MQXLITE/kernel/mqx_utils.c ****  */
 232:../MQXLITE/kernel/mqx_utils.c **** void _mqx_set_exit_handler
 233:../MQXLITE/kernel/mqx_utils.c **** (
 234:../MQXLITE/kernel/mqx_utils.c ****     MQX_EXIT_FPTR entry
 235:../MQXLITE/kernel/mqx_utils.c **** )
 236:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 269              		.loc 1 236 0
 270              		.cfi_startproc
 271 0000 80B5     		push	{r7, lr}
 272              	.LCFI18:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 84B0     		sub	sp, sp, #16
 277              	.LCFI19:
 278              		.cfi_def_cfa_offset 24
 279 0004 00AF     		add	r7, sp, #0
 280              	.LCFI20:
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 237:../MQXLITE/kernel/mqx_utils.c **** #if MQX_EXIT_ENABLED
 238:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 239:../MQXLITE/kernel/mqx_utils.c **** 
 240:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 283              		.loc 1 240 0
 284 0008 054B     		ldr	r3, .L22
 285 000a 1B68     		ldr	r3, [r3]
 286 000c FB60     		str	r3, [r7, #12]
 241:../MQXLITE/kernel/mqx_utils.c ****     _KLOGE2(KLOG_mqx_set_exit_handler, entry);
 242:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->EXIT_HANDLER = entry;
 287              		.loc 1 242 0
 288 000e FA68     		ldr	r2, [r7, #12]
 289 0010 8B23     		mov	r3, #139
 290 0012 9B00     		lsl	r3, r3, #2
 291 0014 7968     		ldr	r1, [r7, #4]
 292 0016 D150     		str	r1, [r2, r3]
 243:../MQXLITE/kernel/mqx_utils.c ****     _KLOGX1(KLOG_mqx_set_exit_handler);
 244:../MQXLITE/kernel/mqx_utils.c **** 
 245:../MQXLITE/kernel/mqx_utils.c **** #endif /* MQX_EXIT_ENABLED */
 246:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 293              		.loc 1 246 0
 294 0018 BD46     		mov	sp, r7
 295 001a 04B0     		add	sp, sp, #16
 296              		@ sp needed for prologue
 297 001c 80BD     		pop	{r7, pc}
 298              	.L23:
 299 001e C046     		.align	2
 300              	.L22:
 301 0020 00000000 		.word	_mqx_kernel_data
 302              		.cfi_endproc
 303              	.LFE6:
 305              		.section	.text._mqx_get_system_task_id,"ax",%progbits
 306              		.align	2
 307              		.global	_mqx_get_system_task_id
 308              		.code	16
 309              		.thumb_func
 311              	_mqx_get_system_task_id:
 312              	.LFB7:
 247:../MQXLITE/kernel/mqx_utils.c **** 
 248:../MQXLITE/kernel/mqx_utils.c **** /*!
 249:../MQXLITE/kernel/mqx_utils.c ****  * \brief Gets the task ID of the System Task.
 250:../MQXLITE/kernel/mqx_utils.c ****  *
 251:../MQXLITE/kernel/mqx_utils.c ****  * System resources are owned by System Task.
 252:../MQXLITE/kernel/mqx_utils.c ****  *
 253:../MQXLITE/kernel/mqx_utils.c ****  * \return TASK_ID Task ID of System Task.
 254:../MQXLITE/kernel/mqx_utils.c ****  *
 255:../MQXLITE/kernel/mqx_utils.c ****  * \see _mem_transfer
 256:../MQXLITE/kernel/mqx_utils.c ****  */
 257:../MQXLITE/kernel/mqx_utils.c **** _task_id _mqx_get_system_task_id
 258:../MQXLITE/kernel/mqx_utils.c **** (
 259:../MQXLITE/kernel/mqx_utils.c ****     void
 260:../MQXLITE/kernel/mqx_utils.c **** )
 261:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 313              		.loc 1 261 0
 314              		.cfi_startproc
 315 0000 80B5     		push	{r7, lr}
 316              	.LCFI21:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 82B0     		sub	sp, sp, #8
 321              	.LCFI22:
 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI23:
 325              		.cfi_def_cfa_register 7
 262:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 263:../MQXLITE/kernel/mqx_utils.c **** 
 264:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 326              		.loc 1 264 0
 327 0006 044B     		ldr	r3, .L26
 328 0008 1B68     		ldr	r3, [r3]
 329 000a 7B60     		str	r3, [r7, #4]
 265:../MQXLITE/kernel/mqx_utils.c ****     return(kernel_data->SYSTEM_TD.TASK_ID);
 330              		.loc 1 265 0
 331 000c 7B68     		ldr	r3, [r7, #4]
 332 000e 5B6D     		ldr	r3, [r3, #84]
 266:../MQXLITE/kernel/mqx_utils.c **** 
 267:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 333              		.loc 1 267 0
 334 0010 181C     		mov	r0, r3
 335 0012 BD46     		mov	sp, r7
 336 0014 02B0     		add	sp, sp, #8
 337              		@ sp needed for prologue
 338 0016 80BD     		pop	{r7, pc}
 339              	.L27:
 340              		.align	2
 341              	.L26:
 342 0018 00000000 		.word	_mqx_kernel_data
 343              		.cfi_endproc
 344              	.LFE7:
 346              		.section	.rodata
 347              		.align	2
 348              	.LC8:
 349 0000 5F6D7178 		.ascii	"_mqx_idle_task\000"
 349      5F69646C 
 349      655F7461 
 349      736B00
 350 000f 00       		.section	.text._mqx_init_kernel_data_internal,"ax",%progbits
 351              		.align	2
 352              		.global	_mqx_init_kernel_data_internal
 353              		.code	16
 354              		.thumb_func
 356              	_mqx_init_kernel_data_internal:
 357              	.LFB8:
 268:../MQXLITE/kernel/mqx_utils.c **** 
 269:../MQXLITE/kernel/mqx_utils.c **** /*!
 270:../MQXLITE/kernel/mqx_utils.c ****  * \private
 271:../MQXLITE/kernel/mqx_utils.c ****  *
 272:../MQXLITE/kernel/mqx_utils.c ****  * \brief Initializes the static parts of the kernel data structure.
 273:../MQXLITE/kernel/mqx_utils.c ****  *
 274:../MQXLITE/kernel/mqx_utils.c ****  * Care has to be taken when calling functions within this file, as the kernel is
 275:../MQXLITE/kernel/mqx_utils.c ****  * not running yet. Specifically, functions which rely on _mqx_get_kernel_data
 276:../MQXLITE/kernel/mqx_utils.c ****  * can not be called.
 277:../MQXLITE/kernel/mqx_utils.c ****  */
 278:../MQXLITE/kernel/mqx_utils.c **** void _mqx_init_kernel_data_internal
 279:../MQXLITE/kernel/mqx_utils.c **** (
 280:../MQXLITE/kernel/mqx_utils.c ****     void
 281:../MQXLITE/kernel/mqx_utils.c **** )
 282:../MQXLITE/kernel/mqx_utils.c **** { /* Body */
 358              		.loc 1 282 0
 359              		.cfi_startproc
 360 0000 80B5     		push	{r7, lr}
 361              	.LCFI24:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 86B0     		sub	sp, sp, #24
 366              	.LCFI25:
 367              		.cfi_def_cfa_offset 32
 368 0004 00AF     		add	r7, sp, #0
 369              	.LCFI26:
 370              		.cfi_def_cfa_register 7
 283:../MQXLITE/kernel/mqx_utils.c ****     KERNEL_DATA_STRUCT_PTR kernel_data;
 284:../MQXLITE/kernel/mqx_utils.c **** 
 285:../MQXLITE/kernel/mqx_utils.c ****     TASK_TEMPLATE_STRUCT_PTR    task_template_ptr;
 286:../MQXLITE/kernel/mqx_utils.c ****     TD_STRUCT_PTR               td_ptr;
 287:../MQXLITE/kernel/mqx_utils.c ****     _mqx_uint                   priority_levels;
 288:../MQXLITE/kernel/mqx_utils.c ****     _mqx_uint                   i;
 289:../MQXLITE/kernel/mqx_utils.c **** 
 290:../MQXLITE/kernel/mqx_utils.c ****     _GET_KERNEL_DATA(kernel_data);
 371              		.loc 1 290 0
 372 0006 614B     		ldr	r3, .L34
 373 0008 1B68     		ldr	r3, [r3]
 374 000a BB60     		str	r3, [r7, #8]
 291:../MQXLITE/kernel/mqx_utils.c **** 
 292:../MQXLITE/kernel/mqx_utils.c ****     /* Store the configuration used when the kernel was compiled */
 293:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->CONFIG1 = MQX_CNFG1;
 375              		.loc 1 293 0
 376 000c BB68     		ldr	r3, [r7, #8]
 377 000e 604A     		ldr	r2, .L34+4
 378 0010 1A82     		strh	r2, [r3, #16]
 294:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->CONFIG2 = MQX_CNFG2;
 379              		.loc 1 294 0
 380 0012 BB68     		ldr	r3, [r7, #8]
 381 0014 4C22     		mov	r2, #76
 382 0016 5A82     		strh	r2, [r3, #18]
 295:../MQXLITE/kernel/mqx_utils.c **** 
 296:../MQXLITE/kernel/mqx_utils.c ****     /* Store the addressability of the processor. How many bits in a byte. */
 297:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->ADDRESSING_CAPABILITY = PSP_MEMORY_ADDRESSING_CAPABILITY;
 383              		.loc 1 297 0
 384 0018 BB68     		ldr	r3, [r7, #8]
 385 001a 0822     		mov	r2, #8
 386 001c 1A60     		str	r2, [r3]
 298:../MQXLITE/kernel/mqx_utils.c **** 
 299:../MQXLITE/kernel/mqx_utils.c ****     /* Indicate the endianess of the target */
 300:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->ENDIANESS = PSP_ENDIAN;
 387              		.loc 1 300 0
 388 001e BB68     		ldr	r3, [r7, #8]
 389 0020 0122     		mov	r2, #1
 390 0022 5A60     		str	r2, [r3, #4]
 301:../MQXLITE/kernel/mqx_utils.c **** 
 302:../MQXLITE/kernel/mqx_utils.c ****     /* Store PSP memory alignment information */
 303:../MQXLITE/kernel/mqx_utils.c **** 
 304:../MQXLITE/kernel/mqx_utils.c **** #if PSP_MEM_STOREBLOCK_ALIGNMENT != 0
 305:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->PSP_CFG_MEM_STOREBLOCK_ALIGNMENT = PSP_MEM_STOREBLOCK_ALIGNMENT;
 391              		.loc 1 305 0
 392 0024 BB68     		ldr	r3, [r7, #8]
 393 0026 0222     		mov	r2, #2
 394 0028 DA81     		strh	r2, [r3, #14]
 306:../MQXLITE/kernel/mqx_utils.c **** #endif
 307:../MQXLITE/kernel/mqx_utils.c **** 
 308:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->PSP_CFG_MEMORY_ALIGNMENT = PSP_MEMORY_ALIGNMENT;
 395              		.loc 1 308 0
 396 002a BB68     		ldr	r3, [r7, #8]
 397 002c 0F22     		mov	r2, #15
 398 002e 5A81     		strh	r2, [r3, #10]
 309:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->PSP_CFG_STACK_ALIGNMENT = PSP_STACK_ALIGNMENT;
 399              		.loc 1 309 0
 400 0030 BB68     		ldr	r3, [r7, #8]
 401 0032 0F22     		mov	r2, #15
 402 0034 9A81     		strh	r2, [r3, #12]
 310:../MQXLITE/kernel/mqx_utils.c **** 
 311:../MQXLITE/kernel/mqx_utils.c ****     /* Set IPC id for compatibility */
 312:../MQXLITE/kernel/mqx_utils.c **** #if MQX_USE_IPC
 313:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->MY_IPC_ID = BUILD_TASKID(kernel_data->INIT.PROCESSOR_NUMBER, 1);
 314:../MQXLITE/kernel/mqx_utils.c **** #endif
 315:../MQXLITE/kernel/mqx_utils.c **** 
 316:../MQXLITE/kernel/mqx_utils.c ****     /* Store location of current interrupt vector table */
 317:../MQXLITE/kernel/mqx_utils.c **** #if MQX_EXIT_ENABLED
 318:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->USERS_VBR = (_mqx_max_type)_int_get_vector_table();
 403              		.loc 1 318 0
 404 0036 FFF7FEFF 		bl	_int_get_vector_table
 405 003a 011C     		mov	r1, r0
 406 003c BA68     		ldr	r2, [r7, #8]
 407 003e 8D23     		mov	r3, #141
 408 0040 9B00     		lsl	r3, r3, #2
 409 0042 D150     		str	r1, [r2, r3]
 319:../MQXLITE/kernel/mqx_utils.c **** #endif
 320:../MQXLITE/kernel/mqx_utils.c **** 
 321:../MQXLITE/kernel/mqx_utils.c **** #if MQX_CHECK_ERRORS
 322:../MQXLITE/kernel/mqx_utils.c ****     if (kernel_data->INIT.TASK_TEMPLATE_LIST == NULL) {
 410              		.loc 1 322 0
 411 0044 BA68     		ldr	r2, [r7, #8]
 412 0046 B823     		mov	r3, #184
 413 0048 5B00     		lsl	r3, r3, #1
 414 004a D358     		ldr	r3, [r2, r3]
 415 004c 002B     		cmp	r3, #0
 416 004e 02D1     		bne	.L29
 323:../MQXLITE/kernel/mqx_utils.c ****         _mqx_exit(MQX_INVALID_POINTER);
 417              		.loc 1 323 0
 418 0050 0120     		mov	r0, #1
 419 0052 FFF7FEFF 		bl	_mqx_exit
 420              	.L29:
 324:../MQXLITE/kernel/mqx_utils.c ****     } /* Endif */
 325:../MQXLITE/kernel/mqx_utils.c **** #endif
 326:../MQXLITE/kernel/mqx_utils.c **** 
 327:../MQXLITE/kernel/mqx_utils.c **** #if MQX_HAS_TIME_SLICE
 328:../MQXLITE/kernel/mqx_utils.c ****     /* Set the default scheduling policy for created tasks */
 329:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->SCHED_POLICY = MQX_SCHED_FIFO;
 330:../MQXLITE/kernel/mqx_utils.c **** #endif
 331:../MQXLITE/kernel/mqx_utils.c **** 
 332:../MQXLITE/kernel/mqx_utils.c **** #if MQX_KD_HAS_COUNTER
 333:../MQXLITE/kernel/mqx_utils.c ****     /* Initialize the kernel counter. */
 334:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->COUNTER = 1U;
 335:../MQXLITE/kernel/mqx_utils.c **** #endif
 336:../MQXLITE/kernel/mqx_utils.c **** 
 337:../MQXLITE/kernel/mqx_utils.c ****     /* Set up the disable and enable priority levels */
 338:../MQXLITE/kernel/mqx_utils.c ****     _psp_set_kernel_disable_level();
 421              		.loc 1 338 0
 422 0056 FFF7FEFF 		bl	_psp_set_kernel_disable_level
 339:../MQXLITE/kernel/mqx_utils.c **** 
 340:../MQXLITE/kernel/mqx_utils.c ****     /*
 341:../MQXLITE/kernel/mqx_utils.c ****      * Initialize the system task so that functions which update the
 342:../MQXLITE/kernel/mqx_utils.c ****      * task error code can be called.
 343:../MQXLITE/kernel/mqx_utils.c ****      * The system task never runs, but it's TD is used for error codes
 344:../MQXLITE/kernel/mqx_utils.c ****      * during initialization, and for storage of memory blocks assigned
 345:../MQXLITE/kernel/mqx_utils.c ****      * to the system.
 346:../MQXLITE/kernel/mqx_utils.c ****      */
 347:../MQXLITE/kernel/mqx_utils.c ****     td_ptr = (TD_STRUCT_PTR) & kernel_data->SYSTEM_TD;
 423              		.loc 1 347 0
 424 005a BB68     		ldr	r3, [r7, #8]
 425 005c 4833     		add	r3, r3, #72
 426 005e 7B60     		str	r3, [r7, #4]
 348:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->ACTIVE_PTR = td_ptr;
 427              		.loc 1 348 0
 428 0060 BB68     		ldr	r3, [r7, #8]
 429 0062 7A68     		ldr	r2, [r7, #4]
 430 0064 DA61     		str	r2, [r3, #28]
 349:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->ACTIVE_SR = kernel_data->DISABLE_SR;
 431              		.loc 1 349 0
 432 0066 BB68     		ldr	r3, [r7, #8]
 433 0068 DA8A     		ldrh	r2, [r3, #22]
 434 006a BB68     		ldr	r3, [r7, #8]
 435 006c 5A83     		strh	r2, [r3, #26]
 350:../MQXLITE/kernel/mqx_utils.c ****     td_ptr->TASK_SR = kernel_data->DISABLE_SR;
 436              		.loc 1 350 0
 437 006e BB68     		ldr	r3, [r7, #8]
 438 0070 DA8A     		ldrh	r2, [r3, #22]
 439 0072 7B68     		ldr	r3, [r7, #4]
 440 0074 9A84     		strh	r2, [r3, #36]
 351:../MQXLITE/kernel/mqx_utils.c ****     td_ptr->TASK_ID = BUILD_TASKID(kernel_data->INIT.PROCESSOR_NUMBER, SYSTEM_TASK_NUMBER);
 441              		.loc 1 351 0
 442 0076 BA68     		ldr	r2, [r7, #8]
 443 0078 A823     		mov	r3, #168
 444 007a 5B00     		lsl	r3, r3, #1
 445 007c D358     		ldr	r3, [r2, r3]
 446 007e 1B04     		lsl	r3, r3, #16
 447 0080 444A     		ldr	r2, .L34+8
 448 0082 1A43     		orr	r2, r3
 449 0084 7B68     		ldr	r3, [r7, #4]
 450 0086 DA60     		str	r2, [r3, #12]
 352:../MQXLITE/kernel/mqx_utils.c ****     td_ptr->STATE = BLOCKED;
 451              		.loc 1 352 0
 452 0088 7B68     		ldr	r3, [r7, #4]
 453 008a 0322     		mov	r2, #3
 454 008c 9A60     		str	r2, [r3, #8]
 353:../MQXLITE/kernel/mqx_utils.c **** 
 354:../MQXLITE/kernel/mqx_utils.c ****     /* Initialize the light weight semaphores queue */
 355:../MQXLITE/kernel/mqx_utils.c ****     _QUEUE_INIT(&kernel_data->LWSEM, 0);
 455              		.loc 1 355 0
 456 008e BB68     		ldr	r3, [r7, #8]
 457 0090 E833     		add	r3, r3, #232
 458 0092 BA68     		ldr	r2, [r7, #8]
 459 0094 E832     		add	r2, r2, #232
 460 0096 1A60     		str	r2, [r3]
 461 0098 BB68     		ldr	r3, [r7, #8]
 462 009a E833     		add	r3, r3, #232
 463 009c BA68     		ldr	r2, [r7, #8]
 464 009e E832     		add	r2, r2, #232
 465 00a0 5A60     		str	r2, [r3, #4]
 466 00a2 BB68     		ldr	r3, [r7, #8]
 467 00a4 E833     		add	r3, r3, #232
 468 00a6 0022     		mov	r2, #0
 469 00a8 1A81     		strh	r2, [r3, #8]
 470 00aa BB68     		ldr	r3, [r7, #8]
 471 00ac E833     		add	r3, r3, #232
 472 00ae 0022     		mov	r2, #0
 473 00b0 5A81     		strh	r2, [r3, #10]
 356:../MQXLITE/kernel/mqx_utils.c **** 
 357:../MQXLITE/kernel/mqx_utils.c **** #if MQX_ENABLE_USER_MODE
 358:../MQXLITE/kernel/mqx_utils.c ****     _QUEUE_INIT(&kernel_data->USR_LWSEM, 0);
 359:../MQXLITE/kernel/mqx_utils.c **** #endif
 360:../MQXLITE/kernel/mqx_utils.c **** 
 361:../MQXLITE/kernel/mqx_utils.c **** #if MQX_HAS_TICK
 362:../MQXLITE/kernel/mqx_utils.c ****     /* Set up the timeout queue */
 363:../MQXLITE/kernel/mqx_utils.c ****     _QUEUE_INIT(&kernel_data->TIMEOUT_QUEUE, 0);
 474              		.loc 1 363 0
 475 00b2 BB68     		ldr	r3, [r7, #8]
 476 00b4 2933     		add	r3, r3, #41
 477 00b6 FF33     		add	r3, r3, #255
 478 00b8 BA68     		ldr	r2, [r7, #8]
 479 00ba 2932     		add	r2, r2, #41
 480 00bc FF32     		add	r2, r2, #255
 481 00be 1A60     		str	r2, [r3]
 482 00c0 BB68     		ldr	r3, [r7, #8]
 483 00c2 2933     		add	r3, r3, #41
 484 00c4 FF33     		add	r3, r3, #255
 485 00c6 BA68     		ldr	r2, [r7, #8]
 486 00c8 2932     		add	r2, r2, #41
 487 00ca FF32     		add	r2, r2, #255
 488 00cc 5A60     		str	r2, [r3, #4]
 489 00ce BB68     		ldr	r3, [r7, #8]
 490 00d0 2933     		add	r3, r3, #41
 491 00d2 FF33     		add	r3, r3, #255
 492 00d4 0022     		mov	r2, #0
 493 00d6 1A81     		strh	r2, [r3, #8]
 494 00d8 BB68     		ldr	r3, [r7, #8]
 495 00da 2933     		add	r3, r3, #41
 496 00dc FF33     		add	r3, r3, #255
 497 00de 0022     		mov	r2, #0
 498 00e0 5A81     		strh	r2, [r3, #10]
 364:../MQXLITE/kernel/mqx_utils.c **** #endif
 365:../MQXLITE/kernel/mqx_utils.c **** 
 366:../MQXLITE/kernel/mqx_utils.c ****     /*
 367:../MQXLITE/kernel/mqx_utils.c ****      * Compute the number of MQX priority levels needed. This is done
 368:../MQXLITE/kernel/mqx_utils.c ****      * by determining the task that has the lowest priority (highest number)
 369:../MQXLITE/kernel/mqx_utils.c ****      */
 370:../MQXLITE/kernel/mqx_utils.c ****     priority_levels = 0;
 499              		.loc 1 370 0
 500 00e2 0023     		mov	r3, #0
 501 00e4 3B61     		str	r3, [r7, #16]
 371:../MQXLITE/kernel/mqx_utils.c **** 
 372:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr = kernel_data->INIT.TASK_TEMPLATE_LIST;
 502              		.loc 1 372 0
 503 00e6 BA68     		ldr	r2, [r7, #8]
 504 00e8 B823     		mov	r3, #184
 505 00ea 5B00     		lsl	r3, r3, #1
 506 00ec D358     		ldr	r3, [r2, r3]
 507 00ee 7B61     		str	r3, [r7, #20]
 373:../MQXLITE/kernel/mqx_utils.c **** 
 374:../MQXLITE/kernel/mqx_utils.c ****     for (i = 0; task_template_ptr->TASK_TEMPLATE_INDEX && (i < MQX_MAXIMUM_NUMBER_OF_TASK_TEMPLATES
 508              		.loc 1 374 0
 509 00f0 0023     		mov	r3, #0
 510 00f2 FB60     		str	r3, [r7, #12]
 511 00f4 0DE0     		b	.L30
 512              	.L33:
 375:../MQXLITE/kernel/mqx_utils.c ****         if (priority_levels < task_template_ptr->TASK_PRIORITY) {
 513              		.loc 1 375 0
 514 00f6 7B69     		ldr	r3, [r7, #20]
 515 00f8 DA68     		ldr	r2, [r3, #12]
 516 00fa 3B69     		ldr	r3, [r7, #16]
 517 00fc 9A42     		cmp	r2, r3
 518 00fe 02D9     		bls	.L31
 376:../MQXLITE/kernel/mqx_utils.c ****             priority_levels = task_template_ptr->TASK_PRIORITY;
 519              		.loc 1 376 0
 520 0100 7B69     		ldr	r3, [r7, #20]
 521 0102 DB68     		ldr	r3, [r3, #12]
 522 0104 3B61     		str	r3, [r7, #16]
 523              	.L31:
 374:../MQXLITE/kernel/mqx_utils.c ****     for (i = 0; task_template_ptr->TASK_TEMPLATE_INDEX && (i < MQX_MAXIMUM_NUMBER_OF_TASK_TEMPLATES
 524              		.loc 1 374 0
 525 0106 FB68     		ldr	r3, [r7, #12]
 526 0108 0133     		add	r3, r3, #1
 527 010a FB60     		str	r3, [r7, #12]
 528 010c 7B69     		ldr	r3, [r7, #20]
 529 010e 1C33     		add	r3, r3, #28
 530 0110 7B61     		str	r3, [r7, #20]
 531              	.L30:
 374:../MQXLITE/kernel/mqx_utils.c ****     for (i = 0; task_template_ptr->TASK_TEMPLATE_INDEX && (i < MQX_MAXIMUM_NUMBER_OF_TASK_TEMPLATES
 532              		.loc 1 374 0 is_stmt 0
 533 0112 7B69     		ldr	r3, [r7, #20]
 534 0114 1B68     		ldr	r3, [r3]
 535 0116 002B     		cmp	r3, #0
 536 0118 03D0     		beq	.L32
 374:../MQXLITE/kernel/mqx_utils.c ****     for (i = 0; task_template_ptr->TASK_TEMPLATE_INDEX && (i < MQX_MAXIMUM_NUMBER_OF_TASK_TEMPLATES
 537              		.loc 1 374 0
 538 011a FA68     		ldr	r2, [r7, #12]
 539 011c 1E4B     		ldr	r3, .L34+12
 540 011e 9A42     		cmp	r2, r3
 541 0120 E9D9     		bls	.L33
 542              	.L32:
 377:../MQXLITE/kernel/mqx_utils.c ****         } /* Endif */
 378:../MQXLITE/kernel/mqx_utils.c ****     } /* Endfor */
 379:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->LOWEST_TASK_PRIORITY = priority_levels;
 543              		.loc 1 379 0 is_stmt 1
 544 0122 BA68     		ldr	r2, [r7, #8]
 545 0124 C423     		mov	r3, #196
 546 0126 3969     		ldr	r1, [r7, #16]
 547 0128 D150     		str	r1, [r2, r3]
 380:../MQXLITE/kernel/mqx_utils.c **** 
 381:../MQXLITE/kernel/mqx_utils.c **** #if MQX_USE_IDLE_TASK
 382:../MQXLITE/kernel/mqx_utils.c ****     /*
 383:../MQXLITE/kernel/mqx_utils.c ****      * Initialize the task template for the IDLE Task.
 384:../MQXLITE/kernel/mqx_utils.c ****      * NOTE that the idle task runs at 1 level lower than any user task.
 385:../MQXLITE/kernel/mqx_utils.c ****      */
 386:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr = (TASK_TEMPLATE_STRUCT_PTR)&kernel_data->IDLE_TASK_TEMPLATE;
 548              		.loc 1 386 0
 549 012a BB68     		ldr	r3, [r7, #8]
 550 012c 8422     		mov	r2, #132
 551 012e 9200     		lsl	r2, r2, #2
 552 0130 9B18     		add	r3, r3, r2
 553 0132 7B61     		str	r3, [r7, #20]
 387:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr->TASK_TEMPLATE_INDEX  = IDLE_TASK;
 554              		.loc 1 387 0
 555 0134 7B69     		ldr	r3, [r7, #20]
 556 0136 194A     		ldr	r2, .L34+16
 557 0138 1A60     		str	r2, [r3]
 388:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr->TASK_STACKSIZE       = kernel_data->INIT.IDLE_TASK_STACK_SIZE;
 558              		.loc 1 388 0
 559 013a BA68     		ldr	r2, [r7, #8]
 560 013c B423     		mov	r3, #180
 561 013e 5B00     		lsl	r3, r3, #1
 562 0140 D258     		ldr	r2, [r2, r3]
 563 0142 7B69     		ldr	r3, [r7, #20]
 564 0144 9A60     		str	r2, [r3, #8]
 389:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr->TASK_NAME            = "_mqx_idle_task";
 565              		.loc 1 389 0
 566 0146 7B69     		ldr	r3, [r7, #20]
 567 0148 154A     		ldr	r2, .L34+20
 568 014a 1A61     		str	r2, [r3, #16]
 390:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr->TASK_ADDRESS         = _mqx_idle_task;
 569              		.loc 1 390 0
 570 014c 7B69     		ldr	r3, [r7, #20]
 571 014e 154A     		ldr	r2, .L34+24
 572 0150 5A60     		str	r2, [r3, #4]
 391:../MQXLITE/kernel/mqx_utils.c ****     task_template_ptr->TASK_PRIORITY        = priority_levels + 1;
 573              		.loc 1 391 0
 574 0152 3B69     		ldr	r3, [r7, #16]
 575 0154 5A1C     		add	r2, r3, #1
 576 0156 7B69     		ldr	r3, [r7, #20]
 577 0158 DA60     		str	r2, [r3, #12]
 392:../MQXLITE/kernel/mqx_utils.c **** #endif
 393:../MQXLITE/kernel/mqx_utils.c **** 
 394:../MQXLITE/kernel/mqx_utils.c ****     /*
 395:../MQXLITE/kernel/mqx_utils.c ****      * Initialize the linked list of all TDs in the system.
 396:../MQXLITE/kernel/mqx_utils.c ****      * Initially zero. Not including system TD
 397:../MQXLITE/kernel/mqx_utils.c ****      */
 398:../MQXLITE/kernel/mqx_utils.c ****     _QUEUE_INIT(&kernel_data->TD_LIST, 0);
 578              		.loc 1 398 0
 579 015a BB68     		ldr	r3, [r7, #8]
 580 015c C833     		add	r3, r3, #200
 581 015e BA68     		ldr	r2, [r7, #8]
 582 0160 C832     		add	r2, r2, #200
 583 0162 1A60     		str	r2, [r3]
 584 0164 BB68     		ldr	r3, [r7, #8]
 585 0166 C833     		add	r3, r3, #200
 586 0168 BA68     		ldr	r2, [r7, #8]
 587 016a C832     		add	r2, r2, #200
 588 016c 5A60     		str	r2, [r3, #4]
 589 016e BB68     		ldr	r3, [r7, #8]
 590 0170 C833     		add	r3, r3, #200
 591 0172 0022     		mov	r2, #0
 592 0174 1A81     		strh	r2, [r3, #8]
 593 0176 BB68     		ldr	r3, [r7, #8]
 594 0178 C833     		add	r3, r3, #200
 595 017a 0022     		mov	r2, #0
 596 017c 5A81     		strh	r2, [r3, #10]
 399:../MQXLITE/kernel/mqx_utils.c **** 
 400:../MQXLITE/kernel/mqx_utils.c ****     /* Set the TD counter */
 401:../MQXLITE/kernel/mqx_utils.c ****     kernel_data->TASK_NUMBER = 1;
 597              		.loc 1 401 0
 598 017e BA68     		ldr	r2, [r7, #8]
 599 0180 D423     		mov	r3, #212
 600 0182 0121     		mov	r1, #1
 601 0184 D150     		str	r1, [r2, r3]
 402:../MQXLITE/kernel/mqx_utils.c **** 
 403:../MQXLITE/kernel/mqx_utils.c **** } /* Endbody */
 602              		.loc 1 403 0
 603 0186 BD46     		mov	sp, r7
 604 0188 06B0     		add	sp, sp, #24
 605              		@ sp needed for prologue
 606 018a 80BD     		pop	{r7, pc}
 607              	.L35:
 608              		.align	2
 609              	.L34:
 610 018c 00000000 		.word	_mqx_kernel_data
 611 0190 FA290000 		.word	10746
 612 0194 FFFF0000 		.word	65535
 613 0198 FEFF0000 		.word	65534
 614 019c 03000080 		.word	-2147483645
 615 01a0 00000000 		.word	.LC8
 616 01a4 00000000 		.word	_mqx_idle_task
 617              		.cfi_endproc
 618              	.LFE8:
 620              		.text
 621              	.Letext0:
 622              		.file 2 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/psp/cortex_m/psptypes.h"
 623              		.file 3 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/mqxlite.h"
 624              		.file 4 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/queue.h"
 625              		.file 5 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/lwsem.h"
 626              		.file 6 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/psp/cortex_m/cortex.h"
 627              		.file 7 "E:/CW103_Work_Space/Mqx_Lite_Test/MQXLITE/include/mqxlite_prv.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mqx_utils.c
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:18     .text._mqx_get_kernel_data:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:23     .text._mqx_get_kernel_data:00000000 _mqx_get_kernel_data
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:54     .text._mqx_get_kernel_data:00000018 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:59     .text._mqx_fatal_error:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:64     .text._mqx_fatal_error:00000000 _mqx_fatal_error
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:93     .text._mqx_get_cpu_type:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:98     .text._mqx_get_cpu_type:00000000 _mqx_get_cpu_type
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:129    .text._mqx_get_cpu_type:00000018 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:134    .text._mqx_set_cpu_type:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:139    .text._mqx_set_cpu_type:00000000 _mqx_set_cpu_type
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:172    .text._mqx_set_cpu_type:0000001c $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:177    .text._mqx_get_initialization:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:182    .text._mqx_get_initialization:00000000 _mqx_get_initialization
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:214    .text._mqx_get_initialization:0000001c $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:219    .text._mqx_get_exit_handler:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:224    .text._mqx_get_exit_handler:00000000 _mqx_get_exit_handler
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:257    .text._mqx_get_exit_handler:0000001c $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:262    .text._mqx_set_exit_handler:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:267    .text._mqx_set_exit_handler:00000000 _mqx_set_exit_handler
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:301    .text._mqx_set_exit_handler:00000020 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:306    .text._mqx_get_system_task_id:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:311    .text._mqx_get_system_task_id:00000000 _mqx_get_system_task_id
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:342    .text._mqx_get_system_task_id:00000018 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:347    .rodata:00000000 $d
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:351    .text._mqx_init_kernel_data_internal:00000000 $t
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:356    .text._mqx_init_kernel_data_internal:00000000 _mqx_init_kernel_data_internal
C:\DOCUME~1\SNAKUL~1.DEL\LOCALS~1\Temp\ccwumCJx.s:610    .text._mqx_init_kernel_data_internal:0000018c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_mqx_kernel_data
_mqx_exit
_int_get_vector_table
_psp_set_kernel_disable_level
_mqx_idle_task
